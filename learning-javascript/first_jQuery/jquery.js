/ *! jQuery v3.4.1 | (c) Fundação JS e outros colaboradores | jquery.org/license * /
! function (e, t) {"use strict"; "objeto" == typeof module && "object" == typeof module.exports? module.exports = e.document? t (e,! 0): function (e) {if (! e.document) throw new Error ("jQuery requer uma janela com um documento"); retorne t (e)}: t (e)} (janela "undefined"! = typeof window?: this, function ( C, e) {"usar estrito"; var t = [], E = C.documento, r = Objeto.getPrototypeOf, s = t.slice, g = t.concat, u = t.push, i = t. indexOf, n = {}, o = n.toString, v = n.hasOwnProperty, a = v.toString, l = a.call (Objeto), y = {}, m = função (e) {retorno "função" == typeof e && "number"! = typeof e.nodeType}, x = função (e) {return null! = e && e === e.window}, c = {tipo:! 0, src:! 0, nonce: ! 0, noModule:! 0}; function b (e, t, n) {var r, i, o = (n = n || E) .createElement ("script"); se (o.text = e, t) para (r em c) (i = t [r] || t.getAttribute && t.getAttribute (r)) && o.setAttribute (r, i); n.head.appendChild (o) .parentNode.removeChild (o)} função w (e) {retorno nulo == e? e + "": "objeto" = = typeof e || "function" == typeof e? n [o.call (e)] || "objeto": typeof e} var f = "3.4.1", k = funo (e, t) {retorno novo k.fn.init (e, t)}, p = / ^ [\ s \ uFEFF \ xA0] + | [\ s \ uFEFF \ xA0] + $ / g; função d (e) {var t =! ! e && "comprimento" em e && e.length, n = w (e); retorno! m (e) &&! x (e) && ("matriz" === n || 0 === t || "número" == typeof t && 0 <t && t-1 em e)} k.fn = k.prototype = {jquery: f, construtor: k, length: 0, toArray: function () {retornar s.call (this)}, obtenha: function (e) {return null == e? s.call (this): e <0? isto [e + este.length]: isto [e]}, pushStack: function (e) {var t = k.merge (this.constructor (), e); return t.prevObject = isto, t}, cada: function (e) {return k.each (isto, e)}, mapa:function (n) {return this.pushStack (k.map (isso, função (e, t) {retornar n.call (e, t, e)}))}, fatia: function () {return this.pushStack ( s.apply (this, arguments))}, first: function () {retornar this.eq (0)}, last: function () {retornar this.eq (-1)}, eq: function (e) {var t = this.length, n = + e + (e <0? t: 0); retorna this.pushStack (0 <= n && n <t? [isto [n]]: [])}, end: function () { return this.prevObject || this.constructor ()}, push: u, ordenar: t.sort, splice: t.splice}, k.extend = k.fn.extend = function () {var e, t, n , r, i, o, a = argumentos [0] || {}, s = 1, u = argumentos.length, l =! 1; for ("booleano" == tipo de a && (l = a, a = argumentos [s] || {}, s ++), "objeto" == typeof a || m (a) || (a = {}), s === u && (a = isso, s -); s < u; s ++) if (null! = (e = argumentos [s])) para (t em e) r = e [t], "__ proto __"! == t && a! == r && (l && r&& (k.isPlainObject (r) ) || (i = Array.isArray (r)))? (n = a [t], o = i &&!Array.isArray (n)? []: I || k.isPlainObject (n) n: {}, i =! 1, a [t] = k.extend (l, o, r)): void 0! == r && (a [t] = r)); retorne a}, k.extend ({expando: "jQuery" + (f + Math.random ()). substitua (/ \ D / g, ""), isReady:! 0, erro: function (e) {lançar novo Erro (e)}, noop: function () {}, isPlainObject: function (e) {var t, n; retorno! (! e || "[objeto Object] "! == o.call (e)) && (! (T = r (e)) ||" função "== typeof (n = v.call (t," construtor ") && t.constructor) && a .call (n) === l)}, isEmptyObject: função (e) {var t; para (t em e) retorno! 1; retorno! 0}, globalEval: function (e, t) {b (e, {nonce: t & t.nonce})}, cada: function (e, t) {var n, r = 0; se (d (e)) {para (n = e.length; r <n; r ++) if ( ! 1 === t.call (e [r], r, e [r])) break} else para (r in e) if (! 1 === t.call (e [r], r, e [r])) break; return e}, trim: function (e) {retorno nulo == e? "" :( e + ""). substitua (p, "")},makeArray: function (e, t) {var n = t || []; retorna nulo! = e && (d (Objeto (e))? k.merge (n, "string" == tipo de e? [e]: e): u.call (n, e)), n}, inArray: function (e, t, n) {retorno null == t? -1: i.call (t, e, n)}, mesclagem: função (e, t) {para (var n = + t.length, r = 0, i = e.length; r <r; r ++) e [i ++] = t [r]; retorno e.length = i, e}, grep: function (e, t, n) {para (var r = [], i = 0, o = e.length, a =! n; i <o; i ++)! t (e [i] , i)! == a && r.push (e [i]); return r}, map: function (e, t, n) {var r, i, o = 0, a = []; se (d (e )) para (r = e.length; o <r o ++) null! = (i = t (e [o], o, n)) && a.push (i), senão para (o em e) null! = (i = t (e [o], o, n)) && a.push (i); retorno g.apply ([], a)}, guid: 1, suporte: y}), "função" == typeof Símbolo && (k.fn [Symbol.iterator] = t [Symbol.iterator]), k.each ("Número de Função da String Booleana Data Matriz RegExp Objeto Símbolo de Erro" .split (""), function (e, t) { n ["[objeto" + t + "] "] = t.toLowerCase ()}); var h = função (n) {var e, d, b, o, i, h, f, g, w, u, l, T, C, a, E , v, s, c, y, k = "chiar" + 1 * nova Data, m = n.documento, S = 0, r = 0, p = ue (), x = ue (), N = ue ( ), A = ue (), D = função (e, t) {return e === t && (l =! 0), 0}, j = {}. HasOwnProperty, t = [], q = t.pop , L = t.push, H = t.push, O = t.slice, P = função (e, t) {para (var n = 0, r = e.length; n <r; n ++) if (e [n] === t) return n; return-1}, R = "marcado | selecionado | async | autofocus | autoplay | controles | defer | desativado | oculto | ismap | loop | múltiplo | aberto | readonly | obrigatório | escopo ", M =" [\\ x20 \\ t \\ r \\ n \\ f] ", eu =" (?: \\\\. | [\\ w-] | [^ \ 0 - \\ xa0]) + ", W =" \\ ["+ M +" * ("+ I +") (?: "+ M +" * ([* ^ $ |! ~]? =) "+ M +" * (? : '((?: \\\\. | [^ \\\\']) *) '| \ "((?: \\\\. | [^ \\\\\"]) *) \ "| (" + I + ")) |)" + M + "* \\]", $ = ":(" + I + ") (?: \\ ((('((?: \\\\. | [^ \\\\ ']) *)'| \ "((?: \\\\. | [^ \\\\\"]) *) \ ") | ((?: \\\\. | [^ \\\\\ () [\\ ]] | "+ W +") *) |. *) \\) |) ", F = novo RegExp (M +" + "," g "), B = novo RegExp (" ^ "+ M +" + | ( (?: ^ | [^ \\\\]) (?: \\\\.) *) "+ M +" + $ "," g "), _ = novo RegExp (" ^ "+ M +" *, "+ M +" * "), z = novo RegExp (" ^ "+ M +" * ([> + ~] | "+ M +") "+ M +" * "), U = novo RegExp (M +" |> " ), X = new RegExp ($), V = novo RegExp ("^" + I + "$"), G = {ID: new RegExp ("^ # (" + I + ")"), CLASS: new RegExp ( "^ \\. (" + I + ")"), TAG: new RegExp ("^ (" + I + "| [*])"), ATTR: novo RegExp ("^" + W), PSEUDO: novo RegExp ("^" + $), CHILD: new RegExp ("^ :( somente | primeiro | último | nth | nth-last) - (filho | do-type) (?: \\ (" + M + "* (par | ímpar | (([+ -] |) (\\ d *) n |) "+ M +" * (?:([+ -] |) "+ M +" * (\\ d +) |)) "+ M +" * \\) |) "," i "), bool: novo RegExp (" ^ (?: "+ R + ") $", "i"), needsContext: new RegExp ("^" + M + "* [> + ~] |: (mesmo | ímpar | eq | gt | lt | nth | primeiro | último) (?: \ \ ("+ M +" * ((?: - \\ d)? \\ d *) "+ M +" * \\) |) (? = [^ -] | $) "," i ")}, Y = / HTML $ / i, Q = / ^ (?: input | select | textarea | botão) $ / i, J = / ^ h \ d $ / i, K = / ^ [^ {] + \ {\ s * \ [nativa \ w /, Z = / ^ (?: # ([\ w -] +) | (\ w +) | \. ([\ w -] +)) $ /, ee = / [+ ~] /, te = new RegExp ("\\\\ ([\\ da-f] {1,6}" + M + "? | (" + M + ") |.)", "ig"), ne = função (e, t, n) {var r = "0x" + t-65536; retorno r! = r || n? t: r <0? String.fromCharCode (r + 65536): String.fromCharCode (r >> 10 | 55296,1023 & r | 56320)}, re = / ([\ 0- \ x1f \ x7f] | ^ -? \ D) | ^ - $ | [^ \ 0- \ x1f \ x7f- \ uFFFF \ w -] / g, ou seja = função (e, t) {retorno t? "\ 0" === e? "\ ufffd": e.slice (0, -1) + "\\ "+ e.charCodeAt (e.length-1) .toString (16) +" ":" \\ "+ e}, oe = função () {T ()}, ae = be (função (e) {return! 0 === e.disabled && "fieldset" === e.nodeName.toLowerCase ()}, {dir: "parentNode", próximo: "legend"}); tente {H.apply (t = O. call (m.childNodes), m.childNodes), t [m.childNodes.length] .nodeType} catch (e) {H = {aplicar: t.length? function (e, t) {L.apply (e, O.call (t))}: função (e, t) {var n = comprimento, r = 0; enquanto (e [n ++] = t [r ++]); e.length = n-1}}} função se (t, e, n, r) {var i, o, a, s, u, l, c, f = e & e.ownerDocument, p = e? e.nodeType: 9; if (n = n || [], "string"! = typeof t || t || 1! == p && 9! == p && 11! == p) retorno n; if (! r && ((e? e.ownerDocument || e: m) ! == C && T (e), e = e || C, E)) {se (11! == p && (u = Z.exec (t))) se (i = u [1]) {se (9 === p) {if (! (a = e.getElementById (i))) return n; if (a.id === i) retorna n.push (a), n} mais se (f && (a = f.getElementById (i)) && y (e, a) && a.id === i) return n.push (a), n} mais {if (u [2]) return H.apply (n, e.getElementsByTagName (t) )), n; if ((i = u [3]) && d.getElementsByClassName && e.getElementsByClassName) return H.apply (n, e.getElementsByClassName (i)), n} se (d.qsa &&! A [t + ""] && (! v ||! v.test (t)) && (1! == p || "objeto"! == e.nodeName.toLowerCase ())) {if (c = t, f = e, 1 === p && U.test (t)) {(s = e.getAttribute ("id"))? s = s.replace (re, ie): e.setAttribute ("id", s = k), o = (l = h (t)). length; enquanto (o -) l [o] = "#" + s + "" + xe (l [o]); c = l.join (","), f = ee.test (t) && ye (e.parentNode) || e} tente {retornar H.apply (n, f.querySelectorAll (c)), n} capturar (e) {A (t,! 0)} finalmente {s === k && e.removeAttribute ("id")}}} return g (t.replace (B, "$ 1"), e, n, r)} função ue () {var r = [];função return e (t, n) {return r.push (t + "")> b.cacheLength && delete e [r.shift ()], e [t + ""] = n}} função le (e) {return e [ k] =! 0, e} function ce (e) {var t = C.createElement ("fieldset"); tente {return !! e (t)} catch (e) {return! 1} finalmente {t.parentNode && t Função .parentNode.removeChild (t), t = null}} fe (e, t) {var n = e.split ("|"), r = n.length; enquanto (r -) b.attrHandle [n [r]] = t} função pe (e, t) {var n = t && e, r = n && 1 === e.nodeType && 1 === t.nodeType && e.sourceIndex-t.sourceIndex; if (r) return r; (n) while (n = n.nextSibling) if (n === t) return-1; retorno e? 1: -1} função de (t) {função de retorno (e) {retorno "entrada" === e.nodeName.toLowerCase () && e.type === t}} function he (n) {função return (e) {var t = e.nodeName.toLowerCase (); return ("entrada" === t || "botão" === t) && e.type === n}} function ge (t) {função de retorno (e) {return "form" em e? e.parentNode &&! 1 === e.disabled? "label" em e? "label" em e. parentNode? e.parentNode.disabled === t: e.disabled === t: e.isDisabled === t || e.isDisabled! ==! t && ae (e) === t: e.disabled == = t: "label" na função e && e.disabled === t}} ve (a) {return le (função (o) {retorno o = + o, le (função (e, t) {var n, r = a ([], e.length, o), i = r.length, enquanto (i -) e [n = r [i]] && (e [n] =! (t [n] = e [n }))})})} function ye (e) {return e && "indefinido"! = tipo de e.getElementsByTagName && e} para (e em d = se.support = {}, i = se.isXML = function (e) { var t = e.namespaceURI, n = (e.ownerDocument || e) .documentElement; return! Y.test (t || n && n.nodeName || "HTML")}, T = se.setDocument = function (e) {var t, n, r = e? e.ownerDocument || e: m; return r! == C && 9 === r.nodeType && r.documentElement && (a = (C = r) .documentElement, E =! i (C), m! == C && (n = C.defaultView) && n.top! == n && (n.addEventListener? n.addEventListener ("descarregar ", oe,! 1): n.attachEvent && n.attachEvent (" onunload ", oe)), d.attributes = ce (função (e) {return e.className =" i ",! e.getAttribute (" className " )}), d.getElementsByTagName = ce (function (e) {retornar e.appendChild (C.createComment ("")) ,! e.getElementsByTagName ("*"). length}), d.getElementsByClassName = K.test (C.getElementsByClassName), d.getById = ce (função (e) {retornar a.appendChild (e) .id = k,! C.getElementsByName ||! C.getElementsByName (k) .comprimento}), d.getById ? (b.filter.ID = função (e) {var t = e.replace (te, ne); função de retorno (e) {return e.getAttribute ("id") === t}}, b.find .ID = função (e, t) {if ("indefinido"! = Tipo de t.getElementById &&E) {var n = t.getElementById (e); retorno n? [N]: []}}) :( b.filter.ID = função (e) {var n = e.replace (te, ne); função de retorno (e) {var t = "indefinido"! = tipo de e.getAttributeNode && e.getAttributeNode ("id"); return t && t.value === n}}, b.find.ID = function (e, t) { if ("indefinido"! = tipo de t.getElementById && E) {var n, r, i, o = t.getElementById (e); if (o) {se ((n = o.getAttributeNode ("id")) && n. valor === e) return [o]; i = t.getElementsByName (e), r = 0; while (o = i [r ++]) if ((n = o.getAttributeNode ("id")) && n.value === e) return [o]} return []}}), b.find.TAG = d.getElementsByTagName? function (e, t) {retorno "undefined"! = tipo de t.getElementsByTagName? t.getElementsByTagName (e ): d.qsa? t.querySelectorAll (e): void 0}: function (e, t) {var n, r = [], i = 0, o = t.getElementsByTagName (e); if ("*" === e) {enquanto (n = o [i ++]) 1 === n.nodeType &&r.push (n); return r} retorna o}, b.find.CLASS = d.getElementsByClassName && function (e, t) {se ("undefined"! = typeof t.getElementsByClassName && E) retorna t.getElementsByClassName (e)}, s = [], v = [], (d.qsa = K.test (C.querySelectorAll)) && (ce (função (e) {a.appendChild (e) .innerHTML = "<a id = '" + k + "'> </a> <selecionar id ='" + k + "- \ r \\ 'msallowcapture =' '> <opção selecionada =' '> </ option> </ select>", e.querySelectorAll (" [msallowcapture ^ = ''] "). length && v.push (" [* ^ $] = "+ M +" * (?: '' | \ "\") "), e.querySelectorAll (" [selecionado] ") .length || v.push ("\\ [" + M + "* (?: valor |" + R + ")"), e.querySelectorAll ("[id ~ =" + k + "-]"). | v.push ("~ ="), e.querySelectorAll (": checked"). length || v.push (": checked"), e.querySelectorAll ("a #" + k + "+ *"). length || v.push (". #. + [+ ~] ")}), ce (função (e) {e.innerHTML =" <a href='' disabled='disabled'> </a> <selecione desativado = 'desativado'> <opção /> </ select > "var = CcreateElement (" input "); t.setAttribute (" tipo "," oculto "), e.appendChild (t) .setAttribute (" nome "," D "), e.querySelectorAll ( "[name = d]"). length && v.push ("nome" + M + "* [* ^ $ |! ~]? ="), 2! == e.querySelectorAll (": enabled"). length && v.push (": enabled", ": disabled"), a.appendChild (e) .disabled =! 0,2! == e.querySelectorAll (": disabled"). length && v.push (": ativado", ": desativado "),e.querySelectorAll ("* ,: x"), v.push (",. *:")})), (d.matchesSelector = K.test (c = a.matches || a.webkitMatchesSelector || a. mozMatchesSelector || a.oMatchesSelector || a.msMatchesSelector)) && ce (função (e) {d.disconnectedMatch = c.call (e, "*"), c.call (e, "[s! = '']: x "), s.push ("! = ", $)}), v = v.length && new RegExp (v.join (" | ")), s = s.length && new RegExp (s.join (" | ") ), t = K.test (a.compareDocumentPosition), y = t || Função de K.test (a.contains)? (e, t) {var n = 9 === e.nodeType? e.documentElement: e , r = t && t.parentNode; return e === r ||! (! r || 1! == r.nodeType ||! (n.contains? n.contains (r): e.compareDocumentPosition && 16 & e.compareDocumentPosition (r) )))}: function (e, t) {se (t) while (t = t.parentNode) if (t === e) retornar! 0; retorno! 1}, D = t? função (e, t ) {if (e === t) retorna l =! 0,0; var n =! e.compareDocumentPosition-! t.compareDocumentPosition; return n || (1 & (n = (e.ownerDocument || e) === (t.ownerDocument || t)? e.compareDocumentPosition (t): 1) ||! d.sortDetached && t.compareDocumentPosition (e ) === n? e === C || e.ownerDocument === m && y (m, e)? - 1: t === C || t.ownerDocument === m && y (m, t)? 1 :? ((((((u u::::::::::}}}}}}}}}}}}}}} function function function function function function function return return ; var n, r = 0, i = e.parentNode, o = t.parentNode, a = [e], s = [t]; if (! i ||! o) return e === C? -1 : t 1::::: -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 return return return return return return return ); n = e; while (n = n.parentNode) a.unshift (n); n = t; enquanto (n = n.parentNode) s.unshift (n); while (a [r] === s [r]) r ++; return r? pe (a [r], s [r]): a [r] === m? -1: s [r] === m? 1: 0}), C }, se.matches = function (e, t) {return se (e, nulo, nulo, t)}, se.matchesSelector = function (e, t) {se ((e.ownerDocument || e)! == C && T (e), d.matchesSelector && E &&! A [t + ""] && (! S ||! S.test (t)) && (! V ||! V.test (t))) tente {var n = c.call (e, t); se (n || d.disconnectedMatch || e.document && 11! == e.document.nodeType) retorne n} catch (e) { A (t,! 0)} retorna 0 <se (t, C, nulo, [e]). Length}, se.contains = função (e, t) {return (e.ownerDocument || e)! == C && T (e), y (e, t)}, se.attr = função (e, t) {(e.ownerDocument || e)! == C && T (e); var n = b.attrHandle [t.toLowerCase ()], r = n && j.call (b.attrHandle, t.toLowerCase ())? n (e, t,! E): void 0; return void 0! == r? r: d.attributes ||! E? E.getAttribute (t): (r = e.getAttributeNode (t)) && r.specified? R.value: null}, se.escape = funï¿½o (e) {return (e + ""). Substituir (re, ie)}, se.error = function (e) {lançar novo Erro ("Erro de sintaxe, expressão não reconhecida:" + e)}, se.uniqueSort = função (e) {var t, n = [], r = 0 , i = 0; if (l =! d.detectDuplicates, u =! d.sortStable && e.slice (0), e.sort (D), l) {enquanto (t = e [i ++]) t === e [i] && (r = n.push (i)), enquanto (r -) e.emenda (n [r], 1)} retorno u = nulo, e}, o = se.getText = função (e) {var t, n = "", r = 0, i = e.nodeType; if (i ) {if (1 === i || 9 === i || 11 === i) {if ("string" == typeof e.textContent) retorna e.textContent; para (e = e.firstChild; e; e = e.nextSibling) n + = o (e)} sen se (3 === i || 4 === i) retorne e.nodeValue} else while (t = e [r ++]) n + = o ( t); return n}, (b = se.selectors = {cacheLength: 50, createPseudo: le, correspondência: G, attrHandle: {}, find: {}, relative: {">": {dir: "parentNode" , primeiro:! 0}, "": {dir: "parentNode"}, "+": {dir: "previousSibling", primeiro:! 0}, "~": {dir: "previousSibling"}}, preFilter: {ATTR: function (e) {return e [1] = e [1] .replace (te, ne), e [3] = (e [3] || e [4] || e [5] || "") .replace (te, ne), "~ =" === e [2] && (e [3] = "" + e [3] + ""), e.slice (0,4)} , CHILD: function (e) {return e [1] = e [1] .toLowerCase (), "nth "=== e [1] .slice (0,3)? (e [3] || se.error (e [0]), e [4] = + (e [4]? e [5] + (e [6] || 1): 2 * ("par" === e [3] || "ímpar" === e [3])), e [5] = + (e [7] + e [8] || "ímpar" === e [3])): e [3] && se.error (e [0]), e}, PSEUDO: função (e) {var t, n =! e [6] && e [2]; return G.CHILD.test (e [0]) null null: (e [3] e [2] = e [4] || e [5] || "": n && X.test (n) && (t = h (n,! 0)) && (t = n.indexOf (")", n.length-t) -n.length) && (e [0] = e [ 0] .slice (0, t), e [2] = n.slice (0, t)), e.slice (0,3))}}, filtro: {TAG: função (e) {var t = e.replace (te, ne) .toLowerCase (); retorno "*" === e? function () {retorno! 0}: function (e) {retorno e.nodeName && e.nodeName.toLowerCase () === t }}, CLASSE: function (e) {var t = p [e + ""]; retorne t || (t = new RegExp ("(^ |" + M + ")" + e + "(" + M + "| $ ) ")) && p (e, função (e) {return t.test (" string "== typeof e.className && e.className || "undefined"! = tipo de e.getAttribute && e.getAttribute ("class") || "")})}, ATTR: function (n, r, i) {função de retorno (e ) {var t = se.attr (e, n); retorno nulo == t? "! =" === r:! r || (t + = "", "=" === r? t == = i: "! =" === r? t! == i: "^ =" === r? i && 0 === t.indexOf (i): "* =" === r? i && - 1 <t.indexOf (i): "$ =" === r? i && t.slice (-i.length) === i: "~ =" === r? -1 <("" + t.replace (F, "") + "") .indexOf (i): "| =" === r && (t === i || t.slice (0, i.length + 1) === i + "- "))}}, CHILD: function (h, e, t, g, v) {var y =" nth "! == h.slice (0,3), m =" last "! == h.slice (-4), x = "do tipo" === e; return 1 === g && 0 === v? Função (e) {return !! e.parentNode}: function (e, t, n) { var r, eu, o, a, s, u, l = y!== m? "nextSibling": "previousSibling", c = e.parentNode, f = x && e.nodeName.toLowerCase (), p =! n &&! x, d =! 1; if (c) {if (y) { while (l) {a = e; while (a = a [l]) se (x? a.nodeName.toLowerCase () === f: 1 === a.nodeType) retorna! 1; u = l = "only" === h &&! u && "nextSibling"} retornar! 0} if (u = [m? c.firstChild: c.lastChild], m && p) {d = (s = (r = (i = (o = (a = c) [k] || (a [k] = {})) [a.uniqueID] || (o [a.uniqueID] = {})) [h] || []) [0] === S && r [1]) && r [2], a = s && c.childNodes [s]; while (a = ++ s && a && a [l] || (d = s = 0) || u.pop ()) se (1 === a.nodeType && ++ d && a === e) {i [h] = [S, s, d]; quebra}} mais se (p && (d = s = (r = (i = (o = (a = e) [k] || (a [k] = {})) [a.uniqueID] || (o [a.uniqueID] = {})) [h] || []) [0 ] === S && r [1]) ,! 1 === d) while (a = ++ s && a && a [l] || (d = s = 0) || u.pop ()) se ((x? A .nodeName.toLowerCase () === f: 1 === a.nodeType) &&++ d && (p && ((i = (o = a [k] || (a [k] = {})) [a.uniqueID] || (o [a.uniqueID] = {})) [h] = [S, d]), a === e)) quebra; retorno (d- = v) === g || d% g == 0 && 0 <= d / g}}}, PSEUDO: function (e , o) {var t, a = b.pseudos [e] || b.setFilters [e.toLowerCase ()] || se.error ("pseudo não suportado:" + e); retorna a [k]? o): 1 <a.length? (t = [e, e, "", o], b.setFilters.hasOwnProperty (e.toLowerCase ())? le (função (e, t) {var n, r = a (e, o), i = r.length, enquanto (i -) e [n = P (e, r [i])] =! (t [n] = r [i])}): function (e) {return a (e, 0, t)}): a}}, pseudos: {não: le (função (e) {var r = [], i = [], s = f (e.replace (B, "$ 1")); return s [k]? Le (função (e, t, n, r) {var i, o = s (e, null, r, []), a = e.length ; while (a -) (i = o [a]) && (e [a] =! (t [a] = i))}): função (e, t, n) {retorno r [0] = e, s (r, nulo, n, i), r [0] = nulo,! i.pop ()}}), tem: le (função (t) {função de retorno (e) {retorno 0 <se ( t, e). comprimento}}, contém: le (função (t) {retorno t = t.replace (te,ne), função (e) {return-1 <(e.textContent || o (e)). indexOf (t)}}), lang: le (função (n) {return V.test (n || " ") || se.error (" lang sem suporte: "+ n), n = n.replace (te, ne) .toLowerCase (), função (e) {var t; do {if (t = E? e. lang: e.getAttribute ("xml: lang") || e.getAttribute ("lang")) return (t = t.toLowerCase ()) === n || 0 === t.indexOf (n + "- ")} while ((e = e.parentNode) && 1 === e.nodeType); return! 1}}), destino: function (e) {var t = n.location && n.location.hash; retorno t && t.slice (1) === e.id}, raiz: function (e) {retorno e === a}, foco: function (e) {retorno e === C.activeElement && (! C.hasFocus || C. hasFocus ()) && !! (e.type || e.href || ~ e.tabIndex)}, habilitado: ge (! 1), desabilitado: ge (! 0), verificado: function (e) {var = e.nodeName.toLowerCase (); retorna "input" === t && !! e.checked || "option" === t && !! e.selected}, selecionado:function (e) {return e.parentNode && e.parentNode.selectedIndex,! 0 === e.selected}, empty: function (e) {para (e = e.firstChild; e; e = e.nextSibling) if (e .nodeType <6) return! 1; return! 0}, parent: function (e) {return! b.pseudos.empty (e)}, cabeçalho: function (e) {return J.test (e.nodeName)} , input: function (e) {return Q.test (e.nodeName)}, botão: função (e) {var t = e.nodeName.toLowerCase (); retorno "input" === t && "button" == = e.type || "button" === t}, text: function (e) {var t; return "input" === e.nodeName.toLowerCase () && "text" === e.type && ( null == (t = e.getAttribute ("type")) || "texto" === t.toLowerCase ())}, primeiro: ve (function () {return [0]}), last: ve ( função (e, t) {retorno [t-1]}), eq: ve (função (e, t, n) {retorno [n <0 n + t: n]}, mesmo: ve (função ( e, t) {para (var n = 0; n <t; n + = 2) e.push (n); retorno e}), ímpar: ve (função (e,t) {para (var n = 1; n <t; n + = 2) e.push (n); retorno e}), lt: ve (função (e, t, n) {para (var r = n < 0? N + t: t <n? T: n; 0 <= - r;) e.push (r); retorno e}), gt: ve (função (e, t, n) {para (var r = n <0 n + t: n; ++ r <t;) e.push (r); return e})}}). pseudos.nth = b.pseudos.eq, {radio:! 0, checkbox:! 0, file:! 0, password:! 0, image:! 0}) b.pseudos [e] = de (e); para (e em {submit:! 0, reset:! 0}) b .pseudos [e] = ele (e); função me () {} função xe (e) {para (var t = 0, n = e.length, r = ""; t <n; t ++) r + = e [t] .value; return r} função be (s, e, t) {var u = e.dir, l = e.next, c = l || u, f = t && "parentNode" === c, p = r ++; return e.first? function (e, t, n) {while (e = e [u]) if (1 === e.nodeType || f) return s (e, t, n); return! 1}: function (e, t, n) {var r, i, o, a = [S, p]; if (n) {enquanto (e = e [u]) se ((1 === e.nodeType || f) && s (e, t, n)) return! 0} else while (e = e [u]) if (1 === e.nodeType || f) if (i = (o = e [k] || (e [k] = {})) [e.uniqueID] || (o [e.uniqueID] = {}), l && l === e.nodeName.toLowerCase ()) e = e [u] || e; else {if ((r = i [c]) && r [0] === S && r [1] === p) retornar a [2] = r [2]; if ((i [c] = a) [2] = s (e, t, n)) retorno! 0} função return! 1}} we (i) {return 1 <i.length? função (e, t, n) {var r = i.length; enquanto (r -) se (! i [r] (e, t, n)) retorna! 1; return! 0}: i [0] } função Te (e, t, n, r, i) {para (var o, a = [], s = 0, u = e.length, l = null! = t; s <u; s ++) (o = e [s]) && (n &&! n (o, r, i) || (a.push (o), l && t.push (s));; retorne uma função} Ce (d, h, g, v , y, e) {retornar v &&! v [k] && (v = Ce (v)), y &&! y [k] && (y = Ce (y, e)), le (função (e, t, n , r) {var i, o, a, s = [], u = [], l = t.length, c = e || função (e, t, n) {para (var r = 0, i = t.length; r <i; r ++) se (e, t [r], n); retorno n} (h || "*", n.nodeType? [n]: n, []), f =! d |||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||| f, p, n, r), v) {i = Te (p, u), v (i, [], n, r), o = i.length; enquanto (o -) (a = i [ o]) && (p [u [o]] =!(f [u [o]] = a))} se (e) {se (y || d) {se (y) {i = [], o = p.length; enquanto (o -) (a = p [o]) && i.push (f [o] = a); y (nulo, p = [], i, r)} o = comprimento_p; enquanto (o -) (a = p [o ]) && - 1 <(i = y? P (e, a): s [o]) && (e [i] =! (T [i] = a))}} mais p = Te (p == = t? p.splice (l, p.length): p), yy (null, t, p, r): função de H.apply (t, p)})} Ee (e) {para (var i, t, n, r = e.length, o = b.relative [e [0] .type], a = o || b.relative [""], s = o? 1: 0, u = be (função (e) {return e === i}, a,! 0), l = be (função (e) {retorno-1 <P (i, e)}, a,! 0), c = [ função (e, t, n) {var r =! o && (n || t! == w) || ((i = t) .nodeTipo? u (e, t, n): l (e, t, n)); return i = null, r}]; s <r; s ++) if (t = b.relativo [e [s] .type]) c = [ser (nós (c), t)]; {if ((t = b.filter [e [s] .tipo] .apply (null, e [s] .matches)) [k]) {para (n = ++ s; n <r; n ++) se (b.relative [e [n] .type]) quebra; retorna Ce (1 <s && nós (c), 1 <s && xe (e.slice (0, s-1) .concat ({valor: "" === e [s-2] .type? "*": ""})) substituir (B, "$ 1"), t, s <n && Ee (e.slice (s, n)), n <r && Ee (e = e.slice (n)), n <r & xe (e)) } c.push (t)} return nós (c)} return me.prototype = b.filters = b.pseudos, b.setFilters = novo eu, h = se.tokenize = função (e, t) {var n, r, i, o, a, s, u, l = x [e + ""]; se (l) retorna t? 0: l.slice (0); a = e, s = [], u = b. preFilter; while (a) {para (o em n &&! (r = _. exec (a)) || (r && (a = a.slice (r [0] .comprimento) || a), s.push ( i = [])), n =! 1, (r = z.exec (a)) && (n = r.shift (), i.push ({valor: n, tipo: r [0] .replace ( B, "")}), a = a.slice (n.length)), b.filter)! (R = G [o] .exec (a)) || u [o] &&! (R = u [o] (r)) || (n = r.shift (), i.push ({valor: n, tipo: o, corresponde a: r}), a = a.slice (n.length)); (! n) break} retornar t? a.length: a? se.error (e): x (e, s) .slice (0)}, f = se.pile = function (e, t) {var n , v, y, m, x, r, i = [], o = [], a = N [e + ""]; se (! a) {t || (t = h (e)), n = t.length; enquanto (n -) (a = Ee (t [n])) [k]? i.empurrar (a): o.push (a); (a = N (e, (v = o, m = 0 <(y = i) .comprimento, x = 0 <v.comprimento, r = função (e, t, n, r, i) {var o, a, s, u = 0, l = "0", c = e && [], f = [], p = w, d = e || x && b.find. TAG ("*", i), h = S + = null == p? 1: Math.random () || .1, g = d.length; para (i && (w = t === C || t || i); l! == g && null! = (o = d [l]); l ++) {if (x && o) {a = 0, t || o.ownerDocument === C || (T (o) , n =! E); enquanto (s = v [a ++]) se (s (o, t || C, n)) {r.push (o); quebra} i && (S = h)} m && (( o =! s && o) && u -, e &&c.push (o)}} se (u + = l, m && l! == u) {a = 0; enquanto (s = y [a ++]) s (c, f, t , n); if (e) {se (0 <u) enquanto (l -) c [l] || f [l] || (f [l] = q.call (r)); f = Te (f)} H.aplicar (r, f), i &&! e && 0 <f.length && 1 <u + y.length && se.uniqueSort (r)} return i && (S = h, w = p), c}, m? le (r): r))). selector = e} retornar a}, g = se.select = função (e, t, n, r) {var i, o, a, s, u, l = "função" == typeof e && e, c =!r & h (e = l.selector || e); se (n = n || [], 1 === c.length) {if (2 <(o = c [0] = c [0] .segmento ( 0)). Length && "ID" === (a = o [0]). Tipo && 9 === t.nodeType && E && b.relative [o [1] .type]) {if (! (T = (b.find. ID (a.matches [0] .replace (te, ne), t) || []) [0])) retorna n; l && (t = t.parentNode), e = e.slice (o.shift ( ) .value.length)} i = G.needsContext.test (e)? 0: o.length; while (i -) {if (a = o [i], b.relativo [s = a.type] ) break; if ((u = b.find [s]) && (r = u (a.matos [0] .replace (te, ne), ee.test (o [0] .tipo) && ye (t. parentNode) || t))) {se (o.splice (i, 1),! (e = r.length && xe (o))) retornam H.apply (n, r), n; break}}} return ( l || f (e, c)) (r, t, E, n,! t || ee.test (e) && ye (t.parentNode) || t), n}, d.sortStable = k. split (""). classifica (D) .join ("") === k, d.detectDuplicates = !! l, T (), d.sortDetached = ce (função (e) {return 1 & e.postDocumentPosition (C .createElement ("fieldset "))}), ce (função (e) {return e.innerHTML =" <a href='#'> </a> "," # "=== e.firstChild.getAttribute (" href ") }} || fe ("tipo | href | altura | largura", função (e, t, n) {if (! n) retorna e.getAttribute (t, "type" === t.toLowerCase ()? 1 : 2)}), d.attributos && ce (function (e) {return e.innerHTML = "<input />", e.firstChild.setAttribute ("valor", ""), "" === e.firstChild. getAttribute ("value")}) || fe ("valor", função (e, t, n) {if (! n && "input" === e.nodeName.toLowerCase ()) return e.defaultValue}), ce (função (e) {return null == e.getAttribute ("disabled")}) || fe (R, função (e, t, n) {var r; if (! n) return! 0 === e [t] t.toLowerCase () :( r = e.getAttributeNode (t)) && r.specified? r.value: null}), se} (C); k.find = h, k.expr = h .selectors, k.expr [":"] = k.expr.pseudos, k.uniqueSort = k.unique = h.uniqueSort, k.text = h.getText, k.isXMLDoc = h.isXML, k.contains = h.contains, k.escapeSelector = h .escape; var T = função (e, t, n) {var r = [], i = void 0! == n; while ((e = e [t]) && 9! == e.nodeType) if ( 1 === e.nodeType) {if (i && k (e) .é (n)) quebra; r.push (e)} retorna r}, S = função (e, t) {para (var n = [] ; e; e = e.nextSibling) 1 === e.nodeType && e! == t && n.push (e); return n}, N = k.expr.match.needsContext; função A (e, t) {return e .nodeName && e.nodeName.toLowerCase () === t.toLowerCase ()} var D = / ^ <([az] [^ \ / \ 0>: \ x20 \ t \ r \ n \ f] *) [\ x20 \ t \ r \ n \ f] * \ /?> (?: <\ / \ 1> |) $ / i; função j (e, n, r) {retorno m (n)? k.grep ( e, função (e, t) {return !! n.call (e, t, e)! == r}): n.nodeType? k.grep (e, função (e) {return e === n ! == r}): "string"! = tipoof n? k.grep (e, função (e) {return-1 <i.call (n, e)! == r}): k.filter (n , e, r)} k.filter = função (e, t,n) {var r = t [0]; return n && (e = ": not (" + e + ")"), 1 === t.length && 1 === r.nodeType? k.find.matchesSelector (r, e)? [r]: []: k.find.matches (e, k.grep (t, função (e) {return 1 === e.nodeType}))}, k.fn.extend ({encontrar : function (e) {var t, n, r = este.length, i = this; if ("string"! = typeof e) retorna this.pushStack (k (e) .filter (function () {para (t = 0; t <r; t ++) if (k.contains (i [t], this)) retorna! 0})); para (n = this.pushStack ([]), t = 0; t <r; t ++) k.find (e, i [t], n); retorno 1 <r? k.uniqueSort (n): n}, filtro: função (e) {return this.pushStack (j (isto, e || [] ,! 1))}, não: function (e) {return this.pushStack (j (isto, e || [], 0))}, é: function (e) {return !! j (isto , "string" == typeof e && N.test (e)? k (e): e || [] ,! 1) .length}}); var q, L = / ^ (?: \ s * (<[ \ w \ W] +>) [^>] * | # ([\ w -] +)) $ /; (k.fn.init = função (e, t, n) {var r, i; ! e) retorne isto, se (n = n || q, "string" == typeof e) {if (!(r = "<" === e [0] && ">" === e [e.length-1] && 3 <= e.length? [null, e, null]: L.exec (e)) ||! r [1] && t) return! t || t.jquery? (t || n) .find (e): este.construtor (t) .find (e); if (r [1]) { if (t = t instanceof k? t [0]: t, k.merge (isso, k.parseHTML (r [1], t && t.nodeType? t.ownerDocument || t: E,! 0)), D. teste (r [1]) && k.isPlainObject (t)) para (r em t) m (isto [r])? isto [r] (t [r]): this.attr (r, t [r]) ; return this} retorno (i = E.getElementById (r [2])) && (this [0] = i, this.length = 1), isso} return e.nodeType? (this [0] = e, este .length = 1, isto): m (e)? void 0! == n.ready? n.ready (e): e (k): k.makeArray (e, isto)}). prototype = k.fn , q = k (E); var H = / ^ (?: pais | prev (?: Até | Todos)) /, O = {filhos:! 0, conteúdo:! 0, próximo:! 0, prev :! 0}; função P (e, t) {enquanto ((e = e [t]) && 1! == e.nodeType); return e} k.fn.extend ({tem: function (e) {var t = k (e, isto), n = t.length; devolva isto.filter (function () {para (var e = 0; e <n; e ++) se (k.contains (isto, t [e])) retornar! 0})}, mais próximo: function (e, t) {var n, r = 0, i = this.length, o = [], a = "string"! = typeof e && k (e); if (! N.test (e)) para (; r <i; r ++) para (n = este [r]; n && n! == t; n = n.parentNode) if (n.nodeType <11 && (a? -1 <a.index (n): 1 === n.nodeType && k.find. matchesSelector (n, e))) {o.push (n); break} retornar this.pushStack (1 <o.length? k.uniqueSort (o): o)}, índice: function (e) {return e? "string" == typeof e? i.call (k (e), isto [0]): i.call (isto, e.jquery? e [0]: e): isto [0] && isto [0]. parentNode? this.first (). prevAll (). length: -1}, add: function (e, t) {retornar this.pushStack (k.uniqueSort (k.merge (this.get (), k (e, t)))}}, addBack: function (e) {retornar this.add (null == e? this.prevObject: this.prevObject.filter (e))}}), k.each ({parent: function ( e) {var t = e.parentNode; retorno t && 11! == t.nodeType? t:null}, parents: function (e) {retornar T (e, "parentNode")}, parentsUntil: function (e, t, n) {retornar T (e, "parentNode", n)}, next: function (e ) {return P (e, "nextSibling")}, prev: function (e) {return P (e, "previousSibling")}, nextAll: function (e) {returnT (e, "nextSibling")}, prevAll : function (e) {retornar T (e, "previousSibling")}, nextUntil: function (e, t, n) {retornar T (e, "nextSibling", n)}, prevUntil: function (e, t, n ) {return T (e, "previousSibling", n)}, irmãos: function (e) {return S ((e.parentNode || {}). firstChild, e)}, filhos: function (e) {return S (e.firstChild)}, conteúdo: function (e) {retorno "undefined"! = tipo de e.contentDocument? e.contentDocument: (A (e, "template") && (e = e.content || e), k.merge ([], e.childNodes))}}, função (r, i) {k.fn [r] = função (e, t) {var n = k.map (isto, i, e); return "Até"!== r.slice (-5) && (t = e), t && "string" == typeof t && (n = k.filter (t, n)), 1 <este.length && (O [r] || k .uniqueSort (n), H.test (r) && n.reverse ()), this.pushStack (n)}}); var R = / [^ \ x20 \ t \ r \ n \ f] + / g; função M (e) {return e} função I (e) {lançar e} função W (e, t, n, r) {var i; try {e && m (i = e.promise)? i.call (e) .done (t) .fail (n): e & m (i = e.then)? i.call (e, t, n): t.apply (void 0, [e] .slice (r)}} catch ( e) {n.apply (void 0, [e])}} k.Callbacks = function (r) {var e, n; r = "string" == tipo de r? (e = r, n = {}, k.each (e.match (R) || [], função (e, t) {n [t] =! 0}), n): k.extend ({}, r); var i, t, o, a, s = [], u = [], l = -1, c = função () {para (a = a || r.once, o = i =! 0; u.length; l = - 1) {t = u.shift (); while (++ l <s.length)! 1 === s [l] .apply (t [0], t [1]) && r.stopOnFalse && (l = s .length, t =! 1)} r.memory || (t =! 1), i =! 1, a && (s = t? []: "")}, f = {adicionar: function () {retorno s e& (t &&! i && (l = s.length-1, u.push (t)), função n (e) {k.each (e, função (e, t) {m (t) r.unique && f. tem (t) || s.push (t): t && t.length && "string"! == w (t) && n (t)})} (argumentos), t &&! i && c ()), isto}, remove: function () {return k.each (argumentos, função (e, t) {var n; while (-1 <(n = k.inArray (t, s, n))) s.splice (n, 1), n <= l && l -}), this}, tem: function (e) {return e? -1 <k.inArray (e, s): 0 <comprimento.sl}, vazio: function () {return s && (s = []), this}, disable: function () {return a = u = [], s = t = "", isto}, desabilitado: function () {return! s}, lock: function () {return a = u = [], t || i || (s = t = ""), isto}, bloqueado: function () {return !! a}, fireWith: função (e, t) {return a || (t = [e, (t = t || []) fatia? t.slice (): t], u.push (t), i || c ()), isto}, fogo: function () {return f.fireWith (isto, argumentos), isto}, disparado: function () {return !! o}};return f}, k.extend ({Deferred: função (e) {var o = [["notificar", "progresso", k.Chabacks ("memória"), k.Callbacks ("memória"), 2], ["resolver", "feito", k.Callbacks ("once memory"), k.Callbacks ("once memory"), 0, "resolvido"], ["reject", "fail", k.Callbacks (" once memory "), k.Callbacks (" once memory "), 1," rejeitado "]], i =" pendente ", a = {estado: function () {return i}, sempre: function () {return s .done (arguments) .fail (argumentos), isto}, "catch": function (e) {return a.then (null, e)}, pipe: function () {var i = argumentos; return k.Deferred ( função (r) {k.each (o, função (e, t) {var n = m (i [t [4]]) && i [t [4]]; s [t [1]] (função () {var e = n && n.apply (isto, argumentos); e && m (e.promise)? e.promise () .progresso (r.notificar) .feito (r.resolve) .fail (r.rejeitar): r [t [0] + "com"] (isto, n? [e]: argumentos)})}), i = null}). promise ()}, em seguida: function (t, n, r ) {var u = 0; função l (i, o, a, s) {função return () {var n = isto, r = argumentos, e = function () {var e, t; if (! (i < u)) {se ((e = a.apply (n, r)) === o.promise ()) lançar novo TypeError ("Auto-resolução de subida"); t = e && ("objeto" == tipo de e || "function" == typeof e) && e.then, m (t)? s? t.call (e, l (u, o, M, s), l (u, o, I, s)): (u ++, t.call (e, l (u, o, M, s), l (u, o, eu, s), l (u, o, M, o.notifyWith))) :( a! = = M && (n = void 0, r = [e]), (s || o.resolveWith) (n, r))}}, t = s? E: function () {tente {e ()} catch ( e) {k.Deferred.exceptionHook && k.Deferred.exceptionHook (e, t.stackTrace), u <= i + 1 && (a! == I && (n = void 0, r = [e]), o.rejectWith (n , r))}}; i? t (): (k.Deferred.getStackHook && (t.stackTrace = k.Deferred.getStackHook ()), C.setTimeout (t))}} return k.Diferido (função (e) {o [0] [3] .add (l (0, e, m (r)? R: M, e.notificarCom)), o [1] [3] .add (l ( 0, e, m (t) t: M)), o [2] [3] .add (l (0, e, m (n)? N: I))}). Promessa ()}, promessa : function (e) {return null! = e? k.extend (e, a): a}}, s = {}; return k.each (o, funç˜ao (e, t) {var n = t [2 ], r = t [5]; a [t [1]] = n.add, r && n.add (function () {i = r}, o [3-e] [2] .disable, o [3- e] [3] .disable, o [0] [2] .lock, o [0] [3] .lock), n.add (t [3] .fire), s [t [0]] = função () {return s [t [0] + "Com"] (isto === s? void 0: this, argumentos), isto}, s [t [0] + "Com"] = n.fireCom}) , a.promise (s), e && e.call (s, s), s}, quando: function (e) {var n = argumentos.length, t = n, r = Matriz (t), i = s.call (argumentos), o = k.Deferred (), a = função (t) {função de retorno (e) {r [t] = isso, i [t] = 1 <argumentos.length? s.call (argumentos): e, - n || o.resolveCom (r, i)}}; se (n <= 1 && (W (e, o.done (a (t)). resolve, o.reject,! n), " pendente "=== o.state () || m (i [t] && i [t].então))) retorne o.then (); while (t -) W (i [t], a (t), o.reject); retorne o.promise ()}}); var $ = / ^ ( Eval | Internal | Range | Referência | Sintaxe | Tipo | URI) Erro $ /; k.Deferred.exceptionHook = função (e, t) {C.console && C.console.warn && e && $. Test (e.name) && C.console. warn ("exceção jQuery.Deferred:" + e.message, e.stack, t)}, k.readyException = função (e) {C.setTimeout (function () {lance e})}; var F = k. Deferred (); função B () {E.removeEventListener ("DOMContentLoaded", B), C.removeEventListener ("carga", B), k.ready ()} k.fn.ready = function (e) {return F .then (e) ["catch"] (função (e) {k.readyException (e)}), este}, k.extend ({isReady:! 1, readyWait: 1, pronto: function (e) {( ! 0 === e? - k.readyWait: k.isReady) || (k.isReady =! 0)! == e && 0 <- k.readyWait || F.resolveWith (E, [k])} }), k.ready.then = F. então, "completo" === E.readyState || "carregando "! == E.readyState &&! E.documentElement.doScroll? C.setTimeout (k.ready): (E.addEventListener (" DOMContentLoaded ", B), C.addEventListener (" carregar ", B)); var _ = função (e, t, n, r, i, o, a) {var s = 0, u = e.length, l = null == n; if ("objeto" === w (n)) para (s em i =! 0, n) _ (e, t, s, n [s], 0, o, a); else if (void 0! == r && (i =! 0, m (r) || (a =! 0), l && (a? (t.call (e, r), t = null): (l = t, t = função (e, t, n) {retorno l.call (k (e), n)})), t)) para (; s <u; s ++) t (e [s], n, a? r: r.call (e [s], s, t (e [ s], n))); retorno i? e: l? t.call (e): u? t (e [0], n): o}, z = / ^ - ms - /, U = / - ([az]) / g; função X (e, t) {retorno t.toUpperCase ()} função V (e) {retornar e.replace (z, "ms -"). substituir (U, X)} var G = função (e) {return 1 === e.nodeType || 9 === e.nodeType ||! + E.nodeType}; função Y () {this.expando = k.expando + Y.uid ++} Y.uid = 1, Y.prototype = {cache: função (e) {var t = e [this.expando]; retorno t || (t = {}, G (e) && (e.nodeType? e [this.expando] = t: Object.defineProperty (e, this.expando, {valor: t, configurável:! 0}))), t}, conjunto: function (e, t, n) {var r, i = this.cache (e); if ("string" == typeof t) i [V (t)] = n; else para (r em t) i [V (r)] = t [r]; return i}, get: function (e, t) {return void 0 === t? this.cache (e): e [this.expando] && e [this.expando] [V (t) ]}, acessar: function (e, t, n) {retornar void 0 === t || t && "string" == typeof t && void 0 === n? this.get (e, t) :( this.set (e, t, n), void 0! == n? n: t)}, remove: function (e, t) {var n, r = e [this.expando]; if (void 0! == r ) {if (void 0! == t) {n = (t = Array.isArray (t)? t.map (V) :( t = V (t)) em r? [t]: t.match ( R) || []). Length; while (n -) deletar r [t [n]]} (void 0 === t || k.isEmptyObject (r)) && (e.nodeType? E [isto .expando] = void 0: delete e [this.expando])}}, hasData: function (e) {var t = e [this.expando]; return void 0! == t &&! k.isEmptyObject (t)} }; var Q = new Y, J = new Y,K = / ^ (?: \ {[\ W \ W] * \} | \ [[\ w \ W] * \]) $ /, Z = / [AZ] / g; função ee (e, t, n) {var r, i; if (void 0 === n && 1 === e.nodeType) if (r = "dados -" + t.replace (Z, "- $ &"). toLowerCase (), " string "== typeof (n = e.getAttribute (r))) {try {n =" true "=== (i = n) ||" falso "! == i && (" null "=== i? null: i === + i + ""? + i: K.test (i)? JSON.para (i): i)} captura (e) {} J.set (e, t, n)} mais n = void 0; return n} k.extend ({hasData: função (e) {return J.hasData (e) || Q.hasData (e)}, data: função (e, t, n) {return J. acesso (e, t, n)}, removeData: função (e, t) {J.remove (e, t)}, _ dados: função (e, t, n) {retorno Q.acesso (e, t, n )}, _ removeData: function (e, t) {Q.remove (e, t)}}), k.fn.extend ({dados: função (n, e) {var t, r, i, o = isto [0], a = o && o.attributes; if (void 0 === n) {if (this.length && (i = J.get (o), 1 === o.nodeType &&! Q.get (o, " hasDataAttrs "))) {t = a.length;while (t -) a [t] && 0 === (r = a [t] .name) .indexOf ("dados -") && (r = V (r.slice (5)), ee (o, r, i [r])); Q.set (o, "hasDataAttrs",! 0)} return i} return "objeto" == tipoof n? this.each (function () {J.set (isto, n )}): _ (this, function (e) {var t; if (o && void 0 === e) retornar void 0! == (t = J.get (o, n)) t: void 0! = (t = ee (o, n)) t: void 0; this.each (function () {J.set (isto, n, e)})}, null, e, 1 <argumentos.length, null ,! 0)}, removeData: function (e) {retornar this.each (function () {J.remove (this, e)})}}), k.extend ({fila: function (e, t, n ) {var r; if (e) retorna t = (t || "fx") + "fila", r = Q.get (e, t), n && (! r || Array.isArray (n)? r = Q.access (e, t, k.makeArray (n)): r.push (n)), r || []}, dequeue: função (e, t) {t = t || "fx"; var n = k.queue (e, t), r = n.length, i = n.shift (), o = k._queueHooks (e, t); "inprogresso" === i && (i = n.shift (), r -), i && ("fx "=== t && n.unshift (" inprogress "), delete o.stop, i.call (e, function () {k.dequeue (e, t)}, o)), r && o && o.empty.fire ( )}, _ queueHooks: function (e, t) {var n = t + "queueHooks"; retorno Q.get (e, n) || Q.access (e, n, {vazio: k.Callbacks ("uma vez memória") ) .add (function () {Q.remove (e, [t + "fila", n])})})}}), k.fn.extend ({fila: function (t, n) {var e = 2; return "string"! = Typeof t && (n = t, t = "fx", e -), arguments.length <e? K.queue (isto [0], t): void 0 === n Isso: this.each (function () {var e = k.queue (isso, t, n); k._queueHooks (isto, t), "fx" === t && "inprogress"! == e [0 ] && k.dequeue (this, t)})}, dequeue: function (e) {retornar this.each (function () {k.dequeue (isto, e)})}, clearQueue: function (e) {retorne este .queue (e || "fx", [])}, promessa: function (e, t) {var n, r = 1, i = k.Deferred (), o = isto, a = isto.length, s = function () {- r || i.resolveWith (o, [o])}; "string"! = typeof e && (t = e, e = void 0), e = e || "fx "; while (a -) (n = Q.get (o [a], e +" queueHooks ")) && n.empty&& (r ++, n.empty.add (s)); retorno s (), i.promise (t)}}); var te = / [+ -]? (?: \ d * \. |) \ d + (?: [eE] [+ -]? \ d + |) /. fonte, ne = novo RegExp ("^ (?: ([+ -]) = |) (" + te + ") ([az%] *) $", "i"), re = ["Superior", "Direita", "Inferior "," Esquerdo "], ie = E.documentElement, oe = função (e) {return k.contains (e.ownerDocument, e)}, ae = {composto:! 0}; ie.getRootNode && (oe = function ( e) {return k.contains (e.ownerDocument, e) || e.getRootNode (ae) === e.ownerDocument}); var se = função (e, t) {retorno "nenhum" === (e = t || e) .style.display || "" === e.style.display && oe (e) && "nenhum" === k.css (e, "display")}, ue = function (e, t, n,r) {var i, o, a = {}; para (o em t) a [o] = e.style [o], e.style [o] = t [o]; para (o em i = n .apply (e, r || []), t) e.style [o] = a [o]; retorno i}; função le (e, t, n, r) {var i, o, a = 20 , s = r? function () {retorno r.cur ()}: function () {retorno k.css (e, t, "")}, u = s (), l = n && n [3] || ( k.cssNumber [t]? "": "px"), c = e.nodeType && (k.cssNumber [t] || "px"! == l && + u) && ne.exec (k.css (e, t )); if (c & c [3]! == l) {u / = 2, l = l || c [3], c = + u || 1; enquanto (a -) k.style (e, t, c + l), (1-o) * (1- (o = s () / u || .5)) <= 0 && (a = 0), c / = o; c * = 2, k .style (e, t, c + l), n = n || []} retorna n && (c = + c || + u || 0, i = n [1]? c + (n [1] +1 ) * n [2]: + n [2], r && (r.unit = l, r.start = c, r.end = i)), i} var ce = {}; função fe (e, t) {para (var n, r, i, o, a, s, u, l = [], c = 0, f = e.length; c <f; c ++) (r = e [c]). estilo && ( n = r.style.display, t? ("nenhum" === n && (l [c] = Q.get (r, "display") || nulo, l [c] || (r.style.display = "")), "" === r.style.display && se (r) && (l [c] = (u = a = o = void 0, a = (i = r) .ownerDocumento, s = i.nodeName, (u = ce [s]) || (o = a.body.appendChild (a.createElement (s)), u = k.css (o, "display"), o.parentNode.removeChild (o), "nenhum" === u && (u = "bloco"), ce [s] = u)))): "nenhum"! == n && (l [c] = "nenhum", Q.set (r, "display", n))), para (c = 0; c <f; c ++) null! = l [c] && (e [c] .style.display = l [c]); } k.fn.extend ({show: function () {return fe (isso,! 0)}, hide: function () {return fe (isso)}, toggle: function (e) {return "booleano" == typeof e? e? this.show (): this.hide (): this.each (function () {se (isso)? k (this) .show (): k (isso) .hide ()})} }); var pe = / ^ (?: checkbox | rádio) $ / i, de = / <([az] [^ \ / \ 0> \ x20 \ t \ r \ n \ f] *) / i, he = / ^ $ | ^ module $ | \ / (?: java | ecma) script / i, ge = {opção: [1, "<selecione multiple = 'multiple'> "," </ select> "], thead: [1," <table> "," </ table> "], col: [2," <tabela> <colgroup> ", "</ colgroup> </ table>"], tr: [2, "<tabela> <tbody>", "</ tbody> </ table>"], td: [3, "<tabela> <tbody> <tr> "," </ tr> </ tbody> </ table> "], _ padrão: [0," "," "]}; função ve (e, t) {var n; return n =" indefinido "! = typeof e.getElementsByTagName? e.getElementsByTagName (t ||" * "):" indefinido "! = tipo de e.querySelectorAll? e.querySelectorAll (t ||" * "): [], void 0 === t || t && A (e, t)? k.merge ([e], n): n} funç˜ao ye (e, t) {para (var n = 0, r = e.length; n <r; n ++) Q.set (e [n], "globalEval",! T || Q.get (t [n], "globalEval"))} ge.optgroup = ge.option, ge.tbody = ge.tfoot = ge.colgroup = ge.caption = ge.thead, ge.th = ge.td; var me, xe, ser = / <& & #? \ w +; /; function we (e, t, n, r, i) {para (var o, a, s, u, l, c, f = t.createDocumentFragment (), p = [], d = 0, h = e.length; d <h; d ++) if ((o = e [d]) || 0 === o) if ("objeto" === w (o)) k.merge (p, o.nodeType ? [o]: o); caso contrário, (be.test (o)) {a = a || f.appendChild (t.createElement ("div")), s = (de.exec (o) || [ "", ""]] [1] .toLowerCase (), u = ge [s] || ge._default, a.innerHTML = u [1] + k.htmlPrefilter (o) + u [2], c = u [0]; while (c -) a = a.lastChild; k.merge (p, a.childNodes), (a = f.firstChild) .textContent = ""} mais p.push (t.createTextNode ( o)); f.textContent = "", d = 0; while (o = p [d ++]) if (r && - 1 <k.inArray (o, r)) i && i.push (o); else if (l = oe (o), a = ve (f.appendChild (o), "script"), l && ye (a), n) {c = 0; enquanto (o = a [c ++]) he.test (o.type || "") && n.push (o)} return f} eu = E.createDocumentFragment (). appendChild (E.createElement ("div")), (xe = E.createElement ("entrada")). setAttribute ("tipo", "rádio" ), xe.setAttribute ("verificado", "verificado"), xe.setAttribute ("nome", "t"), me.appendChild (xe), y.checkClone = me.cloneNode (! 0) .cloneNode (! 0) .lastChild.checked, me.innerHTML = "<textarea> x </ textarea>", y.noCloneChecked = !! me.cloneNode (! 0) .lastChild.defaultValue; var Te = / ^ chave /, Ce = /^(?:mouse|pointer|contextmenu|drag|drop)|click/,Ee=/^([^.]*)(?:\.(.+)|)/;function ke () {retornar! 0} function Se () {return! 1} function Ne (e, t) {retorno e === function () {try {return E.activeElement} captura (e) {}} () == ("foco" === t)} function Ae (e, t, n, r, i, o) {var a, s; if ("objeto" == typeof t) {para (s em "string"! = typeof n && ( r = r || n, n = void 0),t) Ae (e, s, n, r, t [s], o); retorne e} se (null == r && null == i? (i = n, r = n = void 0): null == i && ("string" == typeof n? (i = r, r = void 0) :( i = r, r = n, n = void 0)),! 1 === i) i = Se; sen se ( ! i) return e; return 1 === o && (a = i, (i = função (e) {retorno k (). off (e), a.apply (isto, argumentos)}). guid = a. guid || (a.guid = k.guid ++)), e.each (function () {k.event.add (isto, t, i, r, n)})} função De (e, i, o) {o? (Q.set (e, i,! 1), k.event.add (e, i, {espaço de nomes:! 1, manipulador: função (e) {var t, n, r = Q.get ( isto, i); if (1 & e.isTrigger && this [i]) {se (r.length) (k.event.special [i] || {}). delegateType && e.stopPropagation (); else if (r = s.call (argumentos), Q.set (isto, i, r), t = o (isto, i), isto [i] (), r! == (n = Q.get (isto, i)) || t Q.set (this, i,! 1): n = {}, r! == n) return e.stopImmediatePropagation (), e.preventDefault (), n.value} else r.length && (Q.set ( isto, i, {valor: k.event.trigger (k.extend (r [0], k.Evento.prototipo), r.slice (1), this)}), e.stopImmediatePropagation ())}})): void 0 === Q.get (e, i) && k.event.add (e, i, ke)} k.event = {global: {}, adicione: function (t, e, n, r, i) {var, a, s, u, l, c, f, p, d, h, g, v = Q.get (t); if (v) {n.handler && (n = (o = n) .handler, i = o.selector), i && k.find.matchesSelector (ou seja, i), n.guid || (n.guid = k.guid ++), (u = v.events) || (u = v.events = {}), (a = v.handle) || (a = v.handle = função (e) {return "indefinido "! = typeof k && k.event.triggered! == e.type? k.event.dispatch.apply (t, argumentos): void 0}), l = (e = (e ||" "). correspondência (R ) || [""]]. length; while (l -) d = g = (s = Ee.exec (e [l]) || []) [1], h = (s [2] | | ""). split ("."). sort (), d && (f = k.evento.special [d] || {}, d = (i? f.delegateType: f.bindType) || d, f = k.event.special [d] || {}, c = k.extend ({tipo: d, origType: g, dados: r, manipulador: n, guid: n.guid, seletor: i, needsContext: i && k.expr.match.needsContext.test (i),namespace: h.join (".")}, o), (p = u [d]) || ((p = u [d] = []). delegateCount = 0, f.setup &&! 1! == f.setup.call (t, r, h, a) || t.addEventListener && t.addEventListener (d, a)), f.add && (f.add.call (t, c), c.handler.guid || (c.handler.guid = n.guid)), i? p.splice (p.delegateCount ++, 0, c): p.push (c), k.event.global [d] =! 0)}}, remove: função (e, t, n, r, i) {var o, a, s, u, l, c, f, p, d, h, g, v = Q.hasData (e) && Q.get ( e); if (v && (u = v.eventos)) {l = (t = (t || ""). correspondência (R) || [""]). length; while (l -) if ( d = g = (s = Ee.exec (t [l]) || []) [1], h = (s [2] || ""). dividir ("."). sort (), d ) {f = k.event.special [d] || {}, p = u [d = (r? f.delegateType: f.bindType) || d] || [], s = s [2] && novo RegExp ("(^ | \\.)" + H.join ("\\. (?:. * \\. |)") + "(\\. | $)"), A = o = p. length; while (o -) c = p [o],! i && g! == c.origType || n && n.guid! == c.guid || s &&! s.test (c.namespace) || r && r! == c.selector && ("**"! == r ||! selector) || (p.splice (o, 1), c.selector && p.delegateCount -, f.remove && f .remove.call (e, c)); a &&! p.length && (f.teardown &&! 1! == f.teardown.call (e, h, v.handle) || k.removeEvent (e, d, v .handle), delete u [d])} mais para (d em u) k.event.remove (e, d + t [l], n, r,! 0); k.isEmptyObject (u) && Q.remove (e, "manipular eventos")}}, dispatch: function (e) {var.t, n, r, i, o, a, s = k.event.fix (e), u = novo Array (arguments.length ), l = (Q.get (isto, "eventos") || {}) [s.type] || [], c = k.event.special [s.type] || {}; para (u [0] = s, t = 1; t <argumentos.length; t ++) u [t] = argumentos [t]; if (s.delegateTarget = isto,! C.preDispatch ||! 1! == c.preDispatch .call (isto, s)) {a = k.event.handlers.call (isto, s, l), t = 0; enquanto ((i = a [t ++]) &&! s.isPropagationStopped ()) {s .currentTarget = i.elem, n = 0; while ((o = i.handlers [n ++]) &&! s.isImmediatePropagationStopped ()) s.rnamespace &&! 1! == o.namespace &&! s.rnamespace.test (o.namespace) || (s.handleObj = o, s.data = o. data, void 0! == (r = ((k.event.special [o.origType] || {}) .manter || o.handler) .apply (i.elem, u)) &&! 1 == = (s.result = r) && (s.preventDefault (), s.stopPropagation ()))} return c.postDispatch && c.postDispatch.call (isto, s), s.result}}, manipuladores: function (e, t) {var n, r, i, o, a, s = [], u = t.delegateCount, l = e.target; if (u && l.nodeType &&! ("clique" === e.type && 1 <= e .) para (; l! == this; l = l.parentNode || this) if (1 === l.nodeType && ("clique"! == e.type ||! 0! == l. disabled)) {for (o = [], a = {}, n = 0; n <u; n ++) void 0 === a [i = (r = t [n]). seletor + ""] && ( a [i] = r.needsContext? -1 <k (i, isto) .index (l): k.find (isto, nulo, [l]). comprimento), a [i] && o.push ( r);length && s.push ({elem: l, manipuladores: o})} return l = isso, u <t.length && s.push ({elem: l, manipuladores: t.slice (u)}), s}, addProp: function (t, e) {Object.defineProperty (k.Evento.prototipo, t, {enumerável:! 0, configurável:! 0, get: m (e)? função () {if (this.originalEvent) return e (this .originalEvent)}: function () {if (this.originalEvent) retorna this.originalEvent [t]}, set: function (e) {Object.defineProperty (isto, t, {enumerável:! 0, configurável:! 0, writable:! 0, value: e})}})}, fix: function (e) {return e [k.expando]? e: novo k.Event (e)}, especial: {load: {noBubble:! 0}, clique em: {setup: function (e) {var t = this || e; return pe.test (t.type) && t.click && A (t, "entrada") && De (t, "clique", ke) ,! 1}, trigger: function (e) {var t = this || e; return pe.test (t.type) && t.click && A (t, "entrada") && De (t, "clique"), 0 }, _ default: function (e) {var t = e.target; return pe.test (t.type) && t.click && A (t, "entrada") && Q.get (t, "clique") || A (t, "a")}}, beforeunload: {postDispatch: function (e) {void 0! == e.result && e.originalEvent && (e.originalEvent.returnValue = e.result)}}}}, k.removeEvent = função (e, t, n) {e.removeEventListener && e.removeEventListener (t , n)}, k.Event = função (e, t) {if (! (esta instância de k.Event)) return new k.Event (e, t); e && e.type? (this.originalEvent = e, this .type = e.type, this.isDefaultPrevented = e.defaultPrevented || void 0 === e.defaultPrevented &&! 1 === e.returnValue? ke: Se, this.target = e.target && 3 === e.target .nodeType? e.target.parentNode: e.target, this.currentTarget = e.currentTarget, this.relatedTarget = e.relatedTarget): this.type = e, t && k.extend (this, t), this.timeStamp = e && .timeStamp || Date.now (), este [k.expando] =!0}, k.Event.prototype = {construtor: k.Event, isDefaultPrevented: Se, isPropagationStopped: Se, isImmediatePropagationStopped: Se, isSimulated:! 1, preventDefault: function () {var e = this.originalEvent; this.isDefaultPrevented = ke, e &&! this.isSimulated && e.preventDefault ()}, stopPropagation: function () {var e = this.originalEvent; this.isPropagationStopped = ke, e &&! this.isSimulated && e.stopPropagation ()}, stopImmediatePropagation: function () {var e = this.originalEvent; this.isImmediatePropagationStopped = ke, e &&! this.isSimulated && e.stopImmediatePropagation (), this.stopPropagation ()}}, k.each ({altKey:! 0, bolhas:! 0, canceláveis:! 0, changedTouches:! 0, ctrlKey:! 0, detalhe:! 0, eventPhase:! 0, metaKey:! 0, pageX:! 0, páginaY:! 0, shiftKey:! 0, view:! 0, "char":! 0, código:! 0, charCode:! 0, chave:! 0, keyCode:! 0, botão:! 0, botões:! 0, clientX:! 0, clientY:! 0, offsetX:! 0,offsetY:! 0, pointerId:! 0, pointerType:! 0, screenX:! 0, screenY:! 0, targetTouches:! 0, toElement:! 0, toca:! 0, que: function (e) {var t = e.button; return null == e.which && Te.test (e.type)? null! = e.charCode? e.charCode: e.keyCode:! e.which && void 0! == t && Ce.test (e.type) ? 1 & t? 1: 2 & t? 3: 4 & t? 2: 0: e.which}}, k.event.addProp), k.each ({foco: "focusin", desfoque: "focusout"}, função (e, t) {k.event.special [e] = {configuração: function () {return De (isto, e, Ne),! 1}, gatilho: função () {return De (isto, e), 0} , delegateType: t}}), k.each ({mouseenter: "mouseover", mouseeleave: "mouseout", ponteiroenter: "ponteiro invertido", ponteirolinha: "ponteiroout"), função (e, i) {k.event.special [e] = {delegateType: i, bindType: i, identificador: function (e) {var t, n = e.relatedTarget, r = e.handleObj; retorno n && (n === este || k.contains (isto , n)) || (e.type = r.origType, t = r.handler.apply (isto, argumentos), e.type = i), t}}}), k.fn.extend ({on: function (e, t, n, r) {retorno Ae (isto, e, t, n, r)}, um: função (e, t, n, r) {retorno Ae (isto, e, t, n, r, 1)}, off: função (e, t , n) {var r, i; if (e & e.preventDefault && e.handleObj) return r = e.handleObj, k (e.delegateTarget) .off (r.namespace? r.origType + "." + r.namespace: r. origType, r.selector, r.handler), isto; if ("objeto" == typeof e) {para (i em e) this.off (i, t, e [i]); devolva isto} return! ! == t && "function"! = typeof t || (n = t, t = void 0),! 1 === n && (n = Se), this.each (função () {k.event.remove ( this, e, n, t)})}}; var je = / <(área ?! | br | col | embed | h | img | entrada | ligação | meta | param) (([az] [^ \ / \ 0> \ x20 \ t \ r \ n \ f] *) [^>] *) \ /> / gi, qe = / <script | <estilo | <link / i, Le = / marcado \ s * (?: [^ =] | = \ s * .checked.) / i, He = / ^ \ s * <! (?: \ [CDATA \ [| -) | (?: \] \] | - -)> \ s * $ / g; function Oe (e,t) {return A (e, "table") && A (11! == t.nodeType? t: t.firstChild, "tr") && k (e) .children ("tbody") [0] || e} function Pe (e) {return e.type = (null! == e.getAttribute ("type")) + "/" + e.type, e} função Re (e) {return "true /" === (e.type || ""). slice (0,5)? e.type = e.type.slice (5): e.removeAttribute ("tipo"), e} função Me (e, t) {var n, r, i, o, a, s, u, l; if (1 === t.nodeType) {if (Q.hasData (e) && (o = Q.acesso (e), a = Q. set (t, o), l = o.eventos)) para (i em excluir a.handle, a.events = {}, l) para (n = 0, r = l [i] .comprimento; n <r ; n ++) k.event.add (t, i, l [i] [n]); J.hasData (e) && (s = J.access (e), u = k.extend ({}, s) J. (n, r, i, o) {r = g.apply ([], r); var e, t, a, s, = 0, f = n.length, p = f-1, d = r [0], h = m (d); se (h || 1 <f && "string" == tipoof d &&! Y.checkClone && Le.test (d)) retorno n.cada (função (e) {var = n.eq (e); h && (r [0] = d.call (isto, e, t.html ())), Ie (t, r, i, o) }); if (f && (t = (e = nós (r, n [0] proprietárioDocumento,! 1, n, o)). firstChild, 1 === e.childNodes.length && (e = t), t || o)) {para (s = (a = k.map (ve (e, "script"), Pe)). comprimento; c <f; c ++) u = e, c! == p && (u = k.clone (u,! 0,! 0), s && k.merge (a, ve (u, "script"))), i.call (n [c], u, c); if (s) para ( l = a [a.length-1] .ownerDocument, k.map (a, Re), c = 0; c <s; c ++) u = a [c], he.test (u.type || "" ) &&! Q.access (u, "globalEval") && k.contains (l, u) && (u.src && "módulo"! == (u.type || ""). ToLowerCase ()? K._evalUrl &&! u.noModule && k._evalUrl (u.src, {nonce: u.nonce || u.getAttribute ("nonce")}): b (u.textContent.replace (He, ""), u, l))} n} função Nós (e, t, n) {para (var r, i = t kFilter (t, e): e, o = 0; nulo! = (r = i [o]);o ++) n || 1! == r.nodeType || k.cleanData (ve (r)), r.parentNode && (n && oe (r) && ye (ve (r, "script")), r.parentNode.removeChild ( r)); return e} k.extend ({htmlPrefilter: function (e) {retornar e.replace (je, "<$ 1> </ $ 2>")}, clone: ​​function (e, t, n) {var r, i, o, a, s, u, l, c = e.cloneNode (! 0), f = oe (e); if (! (y.noCloneChecked || 1! == e.nodeType && 11! == e.nodeType || k.isXMLDoc (e))) para (a = ve (c), r = 0, i = (o = ve (e)). comprimento; r <i; r ++) s = o [r ], u = a [r], void 0, "entrada" === (l = u.nodeName.toLowerCase ()) && pe.test (s.type)? u.checked = s.checked: "entrada"! == l && "textarea"! == l || (u.defaultValue = s.defaultValue); if (t) if (n) para (o = o || ve (e), a = a || ve (c ), r = 0, i = o.length; r ++) Eu (o [r], a [r]); senão Me (e, c); retorno 0 <(a = ve (c, " script ")). length && ye (a,! f && ve (e," script ")), c}, cleanData:function (e) {para (var t, n, r, i = k.evento.special, o = 0; void 0! == (n = e [o]); o ++) se (G (n)) { if (t = n [Q.expando]) {se (t.eventos) para (r em t.eventos) i [r] k.evento.remove (n, r): k.removeEvent (n, r, t.handle) n [Q.expando] = void 0} n [J.expando] && (n [J.expando] = void 0)}}}), k.fn.extend ({detach: function (e ) {return Nós (isto, e,! 0)}, removemos: function (e) {return Nós (isto, e)}, texto: function (e) {return _ (isso, função (e) {return void 0 === e? k.text (this): this.empty (). each (função () {1! == this.nodeType && 11! == this.nodeType && 9! == this.nodeType || (this.textContent = e)})}, null, e, arguments.length)}, acrescentar: function () {return Ie (isto, argumentos, função (e) {1! == this.nodeType && 11! == this.nodeType && 9! == this.nodeType || Oe (this, e) .appendChild (e)})}, prefixo: function () {return Ie (isto, argumentos, função (e) {if (1 === this.nodeType || 11 === this.nodeType || 9 === this.nodeType) {var t = Oe (isto, e);t.insertBefore (e, t.firstChild)}})}, antes de: function () {return Ie (isto, argumentos, função (e) {this.parentNode && this.parentNode.insertBefore (e, this)})}, depois : function () {return Ie (isto, argumentos, função (e) {this.parentNode && this.parentNode.insertBefore (e, this.nextSibling)})}, vazio: function () {para (var e, t = 0; null! = (e = this [t]); t ++) 1 === e.nodeType && (k.cleanData (ve (e,! 1)), e.textContent = ""); retorne este}, clone: ​​function (e, t) {return e = null! = e & e, t = null == t? e: t, this.map (function () {retorno k.clone (isto, e, t)})}, html: function (e) {return _ (isso, função (e) {var t = this [0] || {}, n = 0, r = este.length; if (void 0 === e && 1 === t. nodeType) return t.innerHTML; if ("string" == typeof e &&! qe.test (e) &&! ge [(deexex (e) || ["", ""]) [1] .toLowerCase ( )]) {e = k.htmlPrefilter (e); tente {para (; n <r;n ++) 1 === (t = isto [n] || {}). nodeType && (k.cleanData (ve (t,! 1)), t.innerHTML = e); t = 0} captura (e) { }} t && this.empty (). append (e)}, null, e, argumentos.length)}, replaceWith: function () {var n = []; return Ie (isto, argumentos, função (e) {var = this.parentNode; k.inArray (this, n) <0 && (k.cleanData (ve (este)), t && t.replaceChild (e, isto))}, n)}}), k.each ({appendTo: "append", prependTo: "prepend", insertBefore: "antes", insertAfter: "after", replaceAll: "replaceWith"}, function (e, a) {k.fn [e] = function (e) {for ( var t, n = [], r = k (e), i = r.length-1, o = 0; o <= i; o ++) t = o === i? isto: this.clone (! 0 ), k (r [o]) [a] (t), u.apply (n, t.get ()); return this.pushStack (n)}}); var $ e = new RegExp ("^ ( "+ te +") (?! px) [az%] + $ "," i "), Fe = função (e) {var t = e.ownerDocument.defaultView; retorno t && t.opener || (t = C) t.getComputedStyle (e)}, Be = new RegExp (re.join ("|"), "i"); função _e (e, t, n) {var r, i, o, a, s = e.style; return (n = n || Fe (e)) && (""! == (a = n.getPropertyValue (t) || n [t]) || oe (e) || (a = k.style ( e, t)) ,! y.pixelBoxStyles () && $ e.test (a) && Be.test (t) && (r = s.width, i = s.minWidth, o = s.maxWidth, s.minWidth = s.maxWidth = s.width = a, a = n.width, s.width = r, s.minWidth = i, s.maxWidth = o)), void 0! == a? a + "": a} função ze (e, t) {retorno {get: function () {if (! e ()) return (this.get = t) .apply (isto, argumentos); delete this.get}}}! function () { function e () {se (u) {s.style.cssText = "posição: absoluta; esquerda: -11111px; largura: 60px; margem-superior: 1px; preenchimento: 0; borda: 0", u.style.cssText = "posição: relativo; display: bloco; tamanho da caixa: caixa de borda; estouro: rolagem; margem: automático; borda: 1px; preenchimento: 1px; largura: 60%; topo: 1%", ie.appendChild (s ) .appendChild (u);var e = C.getComputedStyle (u); n = "1%"! == e.top, a = 12 === t (e.marginLeft), u.style.right = "60%", o = 36 === t (e.right), r = 36 === t (e.width), u.style.position = "absolute", i = 12 === t (u.offsetWidth / 3), ie. removeChild (s), u = null}} função t (e) {retornar Math.round (parseFloat (e))} var n, r, i, o, a, s = E. criarCreate ("div"), u = E.createElement ("div"); u.style && (u.style.backgroundClip = "caixa de conteúdo", u.cloneNode (! 0) .style.backgroundClip = "", y.clearCloneStyle = "caixa de conteúdo" === u.style.backgroundClip, k.extend (y, {boxSizingReliable: função () {retorno e (), r}, pixelBoxStyles: function () {retorno e (), o}, pixelPosition: function () { return e (), n}, trustedMarginLeft: function () {return e (), um}, scrollboxSize: function () {return e (), i}})}} (); var Ue = ["WebkrCase (); return n || (i = gt [o], gt [o] = r, r = nulo! = a (e, t, n)? o: nulo, gt [o] = i), r }}); var vt = / ^ (?: input | select | textarea | botão) $ / i, yt = / ^ (?: a | área) $ / i; função mt (e) {return (e.match (R) || []). Join ("")} função xt (e) {return e.getAttribute && e.getAttribute ("classe") || ""} função bt (e) {retornar Array.isArray (e) e: "string" == typeof e && e.match (R) || []} k.fn.extend ({prop: função (e, t) {return _ (isto, k.prop, e, t, 1 <arguments.length)}, removeProp: function (e) {retorna this.each (function () {exclui isso [k.propFix [e] || e]})}}), k.extend ({prop: function (e, t, n) {var r, i, o = e.nodeType; se (3! == o && 8! == o && 2! == o) retorne 1 === o && k.isXMLDoc (e) || (t = k.propFix [t] || t, i = k.propHooks [t]), void 0! == n? i && "set" em i && void 0! == (r = i.set (e, n, t ))? r: e [t] = n: i && "get" em i && null! == (r = i.get (e,t))? r: e [t]}, propHooks: {tabIndex: {get: função (e) {var t = k.find.attr (e, "tabindex"); retorno t? parseInt (t, 10) : vt.test (e.nodeName) || yt.test (e.nodeName) && e.href? 0: -1}}}, propFix: {"para": "htmlFor", "class": "className"} }), y.optSelected || (k.propHooks.selected = {get: function (e) {var t = e.parentNode; retorno t && t.parentNode && t.parentNode.selectedIndex, null}, conjunto: function (e) {var t = e.parentNode; t && (t.selectedIndex, t.parentNode && t.parentNode.selectedIndex)}}), k.each (["tabIndex", "readOnly", "maxLength", "cellSpacing", "cellPadding", " rowSpan "," colSpan "," useMap "," frameBorder "," contentEditable "], function () {k.propFix [this.toLowerCase ()] = este}), k.fn.extend ({addClass: function ( t) {var e, n, r, i, o, a,s, u = 0; se (m (t)) retornar this.each (function (e) {k (this) .addClass (t.call (isto, e, xt (this)))}); if (( e = bt (t)). length) while (n = isso [u ++]) if (i = xt (n), r = 1 === n.nodeType && "" + mt (i) + "") {a = 0; while (o = e [a ++]) r.indexOf ("" + o + "") <0 && (r + = o + ""); i! == (s = mt (r)) && n.setAttribute (" classe ", s)} retornar isso}, removeClass: function (t) {var e, n, r, i, o, a, s, u = 0; se (m (t)) retornar this.each (function ( e) {k (this) .removeClass (t.call (this, e, xt (this)))}); if (! arguments.length) retorna this.attr ("class", ""); if (( e = bt (t)). length) while (n = isso [u ++]) if (i = xt (n), r = 1 === n.nodeType && "" + mt (i) + "") {a = 0; while (o = e [a ++]) while (-1 <r.indexOf ("" + o + "")) r = r.replace ("" + o + "", ""); i! == (s = mt (r)) && n.setAttribute ("classe",s)} retornar isto}, toggleClass: function (i, t) {var o = tipoof i, a = "string" === o || Array.isArray (i); retorno "booleano" == typeof t && a? t ? this.addClass (i): this.removeClass (i): m (i)? this.each (função (e) {k (this) .toggleClass (i.call (isto, e, xt (isto), t ), t)}): this.each (function () {var e, t, n, r; if (a) {t = 0, n = k (isto), r = bt (i); = r [t ++]) n.hasClass (e)? n.removeClass (e): n.addClass (e)} mais vazio 0! == i && "booleano"! == o || ((e = xt (isto ) && Q.set (this, "__ className __", e), this.setAttribute && this.setAttribute ("class", e || 1 === i? "": Q.get (this, "__ className __") || ""))})}, hasClass: function (e) {var t, n, r = 0; t = "" + e + ""; enquanto (n = isto [r ++]) if (1 === n. nodeType && - 1 <("" + mt (xt (n)) + "") .indexOf (t)) retorne! 0; retorne! 1}}); var wt = / \ r / g; k.fn.extend ({val:function (n) {var r, e, i, t = este [0]; return argumentos.length? (i = m (n), this.each (função (e) {var t; 1 === isto. nodeType && (null == (t = i? n.call (isto, e, k (isto) .val ()): n)? t = "": "número" == tipo de t? t + = "": Matriz .isArray (t) && (t = k.map (t, função (e) {return null == e? "": e + ""})), (r = k.valHooks [this.type] || k .valHooks [this.nodeName.toLowerCase ()]) && "set" em r && void 0! == r.set (this, t, "valor") || (this.value = t))})): t? (r = k.valHooks [t.type] || k.valHooks [t.nodeName.toLowerCase ()]) && "get" em r && void 0! == (e = r.get (t, "valor")) ? e: "string" == typeof (e = t.value)? e.replace (wt, ""): null == e? "": e: void 0}}), k.extend ({valHooks: {option: {get: function (e) {var = k.find.attr (e, "valor"); retorno null! = t? t: mt (k.text (e))}}, selecione: { pegue:function (e) {var t, n, r, i = e.options, o = e.selectedIndex, a = "selecionar um" === e.type, s = a? null: [], u = a ? o + 1: i.length; para (r = o <0? u: a? o: 0; r <u; r ++) se (((n = i [r]) selecionado || r === o) &&! n.disabled && (! n.parentNode.disabled ||! A (n.parentNode, "optgroup"))) {se (t = k (n) .val (), a) retorna t; s. push (t)} retorna s}, set: function (e, t) {var n, r, i = e.options, o = k.makeArray (t), a = i.length; while (a--) ((r = i [a])) selected = -1 <k.inArray (k.valHooks.option.get (r), o)) && (n =! 0); retorno n || (e.selectedIndex = -1), o}}}}), k.each (["radio", "checkbox"], function () {k.valHooks [isto] = {set: function (e, t) {if (Array. isArray (t)) return e.checked = -1 <k.inArray (k (e) .val (), t)}}, y.checkOn || (k.valHooks [isto] .get = função (e) {return null === e.getAttribute ("value")? "em": e.value})}), y.focusin = "onfocusin" em C; var Tt = / ^ (?:focusinfocus | focusoutblur) $ /, Ct = função (e) {e.stopPropagation ()}; k.extend (k.event, {trigger: função (e, t, n, r) {var i, o, a, s, u, l, c, f, p = [n || E], d = v.call (e, "tipo")? e.type: e, h = v.call (e, "espaço de nomes") ? e.namespace.split ("."): []; if (o = f = a = n = n || E, 3! == n.nodeType && 8! == n.nodeType &&! Tt.test (d + k.event.triggered) && (- 1 <d.indexOf (".") && (d = (h = d.split (".")). shift (), h.sort ()), u = d .indexOf (":") <0 && "on" + d, (e = e [k.expando]? e: novo k.Event (d, "objeto" == typeof e && e)). isTrigger = r? 2: 3, e.namespace = h.join ("."), E.rnamespace = e.namespace? New RegExp ("(^ | \\.)" + H.join ("\\. (?:. * \ \. |) ") +" (\\. | $) "): null, e.result = void 0, e.target || (e.target = n), t = null == t? [e] : k.makeArray (t, [e]), c = k.event.special [d] || {}, r ||! c.trigger ||! 1! == c.trigger.apply (n, t))) {se (! r &&! c.noBubble &&! x (n)) {para (s = c.delegateType || d, Tt.test (s + d) || (o = o.parentNode); o; o = o.parentNode) p.push (o), a = o; a === (n.ownerDocument || E) && p.push (a.defaultView || a.parentWindow || C)} i = 0; enquanto ((o = p [i ++]) &&! E.isPropagationStopped ()) f = o, e.type = 1 <i? S: c.bindType || d, (l = ( Q.get (o, "eventos") || {}) [e.type] && Q.get (o, "manipular")) && l.apply (o, t), (l = u && o [u]) && l. apply && G (o) && (e.result = l.apply (o, t),! 1 === e.result&&preventDefault ()); return e.type = d, r || e.isDefaultPrevented () || c._default &&! 1! == c._default.apply (p.pop (), t) ||! G (n) || u && m (n [d]) &&! x (n) && ((a = n [u]) && (n [u] = null), k.event.triggered = d, e.isPropagationStopped () && f.addEventListener (d, Ct), n [d] (), e.isPropagationStopped () && f.removeEventListener (d, Ct), k.event.triggered = void 0, a && (n [u] = a)), e.result}}, simula: function (e, t, n) {var r = k.extend (novo k.Event, n, {tipo: e, éSimulado:! 0}); k.event.trigger (r, nulo, t)}}), k.fn.extend ({disparador: função (e, t ) {return this.each (function () {k.event.trigger (e, t, isto)})}, triggerHandler: function (e, t) {var n = este [0]; if (n) retorno k .event.trigger (e, t, n,! 0)}}), y.focusin || k.each ({focus: "focusin", desfocagem: "focusout"}, função (n, r) {var i = função (e) {k.event.simulate (r, e.target, k.event.fix (e))}; k.event.special [r] = {setup: function () {var e = isso. ownerDocument || this, t = Q.access (e, r); t || e.addEventListener (n, i,! 0), Q.acesso (e, r, (t || 0) +1)}, teardown: function () {var e = this.ownerDocument || this, t = Q.access (e, r) -1; t? Q.access (e, r, t) :( e.removeEventListener (n, i ,! 0), Q.remove (e, r))}}}); var Et = local C., kt = Date.now (), St = / \? /; K.parseXML = function (e) { var t;if (! e || "string"! = typeof e) retorna null; tente {t = (novo C.DOMParser) .parseFromString (e, "text / xml")} catch (e) {t = void 0} return t &&! t.getElementsByTagName ("parsererror"). length || k.error ("XML inválido:" + e), t}; var Nt = / \ [\] $ /, At = / \ r? \ n / g, Dt = / ^ (?: enviar | botão | imagem | redefinir | arquivo) $ / i, jt = / ^ (?: entrada | selecione | área de texto | keygen) / i; função qt (n, e, r, i) {var t; if (Array.isArray (e)) k.each (e, função (e, t) {r || Nt.test (n)? i (n, t): qt (n + "[ "+ (" objeto "== typeof t && null! = t? e:" ") +"] ", t, r, i)}); else if (r ||" objeto "! == w (e)) i (n, e); senão para (t em e) qt (n + "[" + t + "]", e [t], r, i)} k.param = funç˜ao (e, t) {var n, r = [], i = função (e, t) {var n = m (t) t (): t; r [comprimento r] = encodeURIComponent (e) + "=" + encodeURIComponent (null == n ? "": n)}; if (null == e) retorna ""; if (Matriz.isArray (e) || e.jquery &&! k.isPlainObject (e)) k.each (e, function () {i (this.name, this.value)}); else para (n em e) qt (n , e [n], t, i); retorno r.join ("&")}, k.fn.extend ({serialize: function () {retornar k.param (this.serializeArray ())}, serializeArray: function () {retorne this.map (function () {var e = k.prop (this, "elements"); retorne e? k.makeArray (e): isto}). filter (function () {var e = this.type; retorne this.name &&! k (this) .is (": disabled") && jt.test (this.nodeName) &&! Dt.test (e) && (this.checked ||! pe.test (e )) () map (function (e, t) {var n = k (isto) .val (); retorno nulo = n = nulo: Array.isArray (n)? k.map (n, função (e) ) {return {nome: t.name, valor: e.replace (At, "\ r \ n")}}): {nome: t.name, valor: n.replace (At, "\ r \ n" )}}). get ()}}); var Lt = /% 20 / g, Ht = / #. * $ /, Ot = / ([? &]) _ = [^ &] * /, Pt = / ^ (. *?): [\ t] * ([^ \ r \ n] *) $ / gm, Rt = / ^ (?:GET | HEAD) $ /, Mt = / ^ \ / \ //, = {}, Wt = {}, $ t = "* /". Concat ("*"), Ft = E.createElement ("a "); função Bt (o) {função de retorno (e, t) {" string "! = tipo de e && (t = e, e =" * "); var n, r = 0, i = e.toLowerCase () .match (R) || []; se (m (t)) enquanto (n = i [r ++]) "+" === n [0]? (n = n.slice (1) || "* ", (o [n] = o [n] || []). unshift (t)) :( o [n] = o [n] || []). push (t)}} função _t (t , i, o, a) {var s = {}, u = t === Wt; função l (e) {var r; retorno s [e] =! 0, k.each (t [e] || [], function (e, t) {var n = t (i, o, a); return "string"! = tipo de n || u || s [n]? u?! (r = n): void 0: (i.dataTypes.unshift (n), l (n) ,! 1)}), r} return l (i.dataTypes [0]) ||! S ["*"] && l ("*") } função zt (e, t) {var n, r, i = k.ajaxSettings.flatOptions || {}; para (n em t) void 0! == t [n] && ((i [n]? e : r || (r = {})) [n] = t [n]); retorno r && k.extend (! 0, e, r), e} Ft.href = Et.href, k.extend ({ativo : 0,lastModified: {}, etag: {}, ajaxSettings: {url: Et.href, tipo: "GET", isLocal: / ^ (?: sobre o | app-app-armazenamento |. - extensão | arquivo | res | widget ): $ /. test (Et.protocol), global:! 0, processData:! 0, assíncrono:! 0, contentType: "aplicativo / x-www-form-urlencoded; charset = UTF-8", aceita: { "*": $ t, texto: "texto / sem formatação", html: "texto / html", xml: "aplicativo / xml, texto / xml", json: "aplicativo / json, texto / javascript"}, conteúdo: {xml: / \ bxml \ b /, html: / \ bhtml /, json: / \ bjson \ b /}, responseFields: {xml: "responseXML", texto: "responseText", json: "responseJSON"}, conversores : {"* texto": String, "texto html":! 0, "texto json": JSON.parse, "texto xml": k.parseXML}, flatOptions: {url:! 0, contexto:! 0}} , ajaxSetup: function (e, t) {return t? zt (zt (e, k.ajaxSettings), t): zt (k.ajaxSettings, e)}, ajaxPrefilter:Bt (It), ajaxTransport: Bt (Wt), ajax: function (e, t) {"objeto" == typeof e && (t = e, e = void 0), t = t || {}; var c, f, p, n, d, r, h, g, i, o, v = k.ajaxConfiguração ({}, t), y = v.contexto || v, m = v.context && (y.nodeType || y.jquery) k (y): k.event, x = k.Deferred (), b = k.Callbacks ("uma vez memória"), w = v.statusCode || {}, a = {}, s = {}, u = "cancelado", T = {readyState: 0, getResponseHeader: função (e) {var t; if (h) {if (! n) {n = {}; while (t = Pt.exec (p)) n [t [1] .toLowerCase () + ""] = (n [t [1] .toLowerCase () + ""] || []). concat (t [2])} t = n [e.toLowerCase () + ""]} return null == t? null: t.join (",")}, getAllResponseHeaders: function () {retorno h? p: null}, setRequestHeader: function (e, t) {return null == h && (e = s [e.toLowerCase ()] = s [e.toLowerCase ()] || e, a [e] = t), isto}, overrideMimeType: function (e) { return null == h && (v.mimeType = e), isto}, statusCode: function (e) {var;if (e) se (h) T.always (e [T.status]), senão para (t em e) w [t] = [w [t], e [t]], retorne isto}, abortar: function (e) {var t = e || u; return c && c.abort (t), l (0, t), isto}}; se (x.promise (T), v.url = ((e || v.url || Et.href) + ""). replace (Mt, Et.protocol + "//"), v.type = t.method || t.type || v.method || v.type, v.dataTypes = (v.dataType || "*"). toLowerCase (). match (R) || [""], null == v.crossDomain) {r = E.createElement ("a"); tente {r.href = v.url, r.href = r.href, v.crossDomain = Ft.protocol + "//" + Ft.host! = r.protocol + "//" + r.host} captura (e) {v.crossDomain =! 0}} if (v.data && v.processData && "string"! = tipo de v.data && (v.data = k.param (v.data, v.tradicional)), _ t (It, v, t, T), h) retornar T, para (i em (g = k.event && v.global) && 0 == k.active ++ && k.event.trigger ("ajaxStart"), v.type = v.type. toUpperCase (), v.hasContent =! Rt.test (v.type), f = v.url.replace (Ht, ""), v.hasContent? v.data && v.processData && 0 === (v.contentType || ""). indexOf ( "application / x-www-form-urlencoded") && (v.data = v.data.replace (Lt, "+")) :( o = v.url.slice (f.length), v.data && ( v.processData || "string" == typeof v.data) && (f + = (teste de St (f)? "&": "?") + v.data, excluir v.data) ,! 1 == = v.cache && (f = f.replace (Ot, "$ 1"), o = (teste (f)? "&": "?") + "_ =" + kt +++ o), v .url = f + o), v.ifModified && (k.lastModified [f] && T.setRequestHeader ("If-Modified-Since", k.lastModified [f]), k.etag [f] && T.setRequestHeader ("Se -None-Match ", k.etag [f])), (v.data && v.hasContent &&! 1! == v.contentType || t.contentType) && T.setRequestHeader ("Tipo de Conteúdo", v.contentType), T.setRequestHeader ("Aceitar", v.dataTypes [0] && v.accepts [v.dataTypes [0]]? v.accepts [v.dataTypes [0]] + ("*"! == v.dataTypes [0]? "," + $ t + "; q = 0.01": ""): v.accepts ["*"]), v.headers) T.setRequestHeader ( i, v.headers [i]); if (v.beforeSend && (! 1 === v.beforeSend.call (y, T, v) || h)) retorno T.abort (); se (u = " anular ", b.add (v.complete), T.done (v.success), T.fail (v.error), c = _t (Wt, v, t, T)) {se (T.readyState = 1, g && m.trigger ("ajaxSend", [T, v]), h) retorna T; v.async && 0 <v.timeout && (d = C.setTimeout (function () {T.abort ("tempo limite")}, v.timeout)); tente {h =! 1, c.send (a, l)} capturar (e) {se (h) lançar e; l (-1, e)}} mais l (-1, " Sem transporte "); função l (e, t, n, r) {var i, o, a, s, u, l = t; h || (h =! 0, d && C.clearTimeout (d), c = void 0,p = r || "", T.readyState = 0 <e? 4: 0, i = 200 <= e && <300 || 304 === e, n && (s = função (e, t, n) {var r, i, o, a, s = e.contents, u = e.dataTypes; while ("*" === u [0]) u.shift (), void 0 === r && (r = e. mimeType || t.getResponseHeader ("Content-Type")); if (r) para (i em s) if (s [i] && s [i] .test (r)) {u.unsshift (i); } if (u [0] em n) o = u [0]; sen {para (i em n) {if (! u [0] || e.converters [i + "" + u [0]]) { o = i; quebrar} a || (a = i)} o = o || a} se (o) retornar o! == u [0] && u.unshift (o), n [o]} (v, T, n)), s = função (e, t, n, r) {var i, o, a, s, u, l = {}, c = e.dataTypes.slice (); if (c [1 ]) para (a em e.converters) l [a.toLowerCase ()] = e.converters [a]; o = c.shift (); enquanto (o) if (e.responseFields [o] && (n [ e.responseFields [o]] = t), u &&&&&.dataFilter && (t = e.dataFilter (t, e.dataType)), u = o, o = c.shift ()) if ("*" === o) o = u; else if ("*"! == u && u!== o) {if (! (a = l [u + "" + o] || l ["*" + o])) para (i em l) se ((s = i.split ("")) [1] === o && (a = l [u + "" + s [0]] || l ["*" + s [0]])) {! 0 === a? A = l [i] :! 0! == l [i] && (o = s [0], c.shift (s [1])); break} if (! 0! == a) se (a && e ["lances"]) t = a (t); else tente {t = a (t)} catch (e) {return {state: "parsererror", erro: a? e: "Nenhuma conversão de" + u + "para" + o}} } return {estado: "sucesso", dados: t}} (v, s, T, i), i? (v.ifModificado && ((u = T.getResponseHeader ("Última modificação")) && (k.lastModified [f] = u), (u = T.getResponseHeader ("etag")) && (k.etag [f] = u)), 204 === e || "HEAD" === v.type? l = "nocontent": 304 === e? l = "não modificado" :( l = s.state, o = s.data, i =! (a = s.error))): (a = l,! e && l || (l = "erro", e <0 && (e = 0))), T.status = e, T.statusText = (t || l) + "", i? x.resolveWith (y, [o, l, T]): x.rejectWith (y, [T, l, a]), T.statusCode (w) , w = void 0, g && m.trigger (i? "ajaxSuccess": "ajaxError", [T, v, i? o: a]), b.fireCom (y, [T, l]), g && (m. trigger ("ajaxComplete", [T, v]), - k.active || k.event.trigger ("ajaxStop")))} retorno T}, getJSON: function (e, t, n) {retorno k .get (e, t, n, "json")}, getScript: função (e, t) {retorno k.get (e, void 0, t, "script")}}), k.each ([" get "," post "], função (e, i) {k [i] = função (e, t, n, r) {retorno m (t) && (r = r || n, n = t, t = void 0), k.ajax (k.extend ({url: e, tipo: i, dataType: r, dados: t, sucesso: n}, k.isPlainObject (e) && e))}}), k. _evalUrl = function (e, t) {retornar k.ajax ({url: e, tipo: "GET", dataType: "script", cache:! 0, assíncrono:! 1, global:! 1, conversores: {" script de texto ": function () {}}, dataFilter:função (e) {k.globalEval (e, t)}})}, k.fn.extend ({wrapAll: função (e) {var t; return this [0] && (m (e) && (e = e.call (this [0])), t = k (e, this [0] ownerDocument) .eq (0) .clone (! 0), este [0] .parentNode && t.insertBefore (este [0]) t.map (function () {var e = this; while (e.firstElementChild) e = e.firstElementChild; retorna e}). append (this)), este}, wrapInner: function (n) {return m () n)? this.each (função (e) {k (this) .wrapInner (n.call (isto, e))}): this.each (function () {var e = k (isto), t = e .contents (); t.length? t.wrapAll (n): e.append (n)})}, wrap: function (t) {var n = m (t); retorna this.each (função (e) {k (this) .wrapAll (nt.call (this, e): t)})}, unwrap: função (e) {return this.parent (e) .not ("corpo"). each (função () {k (this) .replaceWith (this.childNodes)}), isto}}), k.expr.pseudos.hidden = função (e) {return! k.expr.pseudos.visible (e)}, k .expr.pseudos.visible = function (e) {return !! (e.offsetWidth || e.offsetHeight || e.getClientRects (). length)}, k.ajaxSettings.xhr = function () {tentar {retornar novo C.XMLHttpRequest} catch (e) {}}; var Ut = {0: 200,1223: 204}, Xt = k.ajaxSettings.xhr (); y.cors = !! Xt && "withCredentials" em Xt, y.ajax = Xt = !! Xt, k.ajaxTransport (função (i) {var o, a; if (y.cors || Xt &&! i.crossDomain) return {send: function (e, t) {var n, r = i.xhr (); if (r.open (i.type, i .url, i.async, i.username, i.password), i.xhrFields) para (n em i.xhrFields) r [n] = i.xhrFields [n]; para (n em i.mimeType && r.overrideMimeType && r. overrideMimeType (i.mimeType), i.crossDomain || e ["X-Requested-With"] || (e ["X-Requested-With"] = "XMLHttpRequest"), e) r.setRequestHeader (n, e [n]); o = função (e) {função return () {o && (o = a = r.onload = r.onerror = r.onabort = r.ontimeout = r.onreadystatechange = null, "anular" == = e? r.abort (): "erro "=== e?" número "! = tipo de r.status? t (0," erro "): t (r.status, r.statusText): t (Ut [r.status] || r.status , r.statusText, "texto"! == (r.responseType || "texto") || "string"! = tipo de r.responseText? {binário: r.response}: {texto: r.responseText}, r .getAllResponseHeaders ()))}}, r.onload = o (), um = r.onerror = r.ontimeout = o ("erro"), void 0! == r.onabort? r.onabort = a: r .onreadystatechange = function () {4 === r.readyState && C.setTimeout (function () {o && a ()})}, o = o ("anular"); tente {r.send (i.hasContent && i.data || null)} capturar (e) {se (o) lançar e}}, abortar: function () {o && o ()}}}), k.ajaxPrefilter (função (e) {e.crossDomain && (e.contents.script = ! 1)}), k.ajaxSetup ({aceita: {script: "texto / javascript, aplicativo / javascript, aplicativo / ecmascript, aplicativo / x-ecmascript"}, conteúdo: {script: / \ b (?:java | ecma) script \ b /}, conversores: {"script de texto": function (e) {retorno k.globalEval (e), e}}}), k.ajaxPrefilter ("script", função (e) { void 0 === e.cache && (e.cache =! 1), e.crossDomain && (e.type = "GET")}), k.ajaxTransport ("script", função (n) {var r, i; if (n.crossDomain || n.scriptAttrs) return {send: function (e, t) {r = k ("<script>"). attr (n.scriptAttrs || {}). prop ({conjunto de caracteres: n .scriptCharset, src: n.url}). on ("erro de carga", i = função (e) {r.remove (), i = null, e & t ("error" === e.type? 404: 200 , e.type)}), E.head.appendChild (r [0])}, abortar: function () {i && i ()}}}); var Vt, Gt = [], Yt = / (=) \ ? (? = & | $) | \? \? /; k.ajaxSetup ({jsonp: "retorno de chamada", jsonpCallback: function () {var e = Gt.pop () || k.expando + "_" + kt ++ ; retorne isto [e] =! 0, e}}), k.ajaxPrefilter ("json jsonp", função (e, t, n) {var r, i,o, a =! 1! == e.jsonp && (Yt.test (e.url)? "url": "string" == typeof e.data && 0 === (e.contentType || ""). indexOf ( "application / x-www-form-urlencoded") && Yt.test (e.data) && "data"); if (a || "jsonp" === e.dataTypes [0]) retorna r = e.jsonpCallback = m (e.jsonpCallback)? e.jsonpCallback (): e.jsonpCallback, a? e [a] = e [a] .replace (Yt, "$ 1" + r):! 1! == e.jsonp && ( e.url + = (St.test (e.url)? "&": "?") + e.jsonp + "=" + r), e.converters ["script json"] = função () {return o | | k.error (r + "não foi chamado"), o [0]}, e.dataTypes [0] = "json", i = C [r], C [r] = função () {o = argumentos} , n.always (function () {void 0 === i? k (C) .removeProp (r): C [r] = i, e [r] && (e.jsonpCallback = t.jsonpCallback, Gt.push (r)), o && m (i) && i (o [0]), o = i = void 0}), "script"}), y.createHTMLDocument = ((Vt = E.implementation.createHTMLDocument (""). body) .innerHTML = "<formulário> </ form> <formulário> </ form>", 2 === Vt.childNodes .length), k.parseHTML = função (e, t, n) {return "string"! = typeof e? [] :( "booleano" == typeof t && (n = t, t =! 1), t | | (y.createHTMLDocument? ((r = (t = E.implementation.createHTMLDocument ("")). createElement ("base")). href = E.location.href, t.head.appendChild (r)): t = E), o =! n && [], (i = D.exec (e))? [t.createElement (i [1])]: (i = nós ([e], t, o), o && .Comprimento && k (o) .remove (), k.merge ([], i.childNodes))); var r, i, o}, k.fn.load = função (e, t, n) {var r, i, o, a = isto, s = e.indexOf (""); return-1 <s && (r = mt (e.slice (s)), e = e.slice (0, s)), m ( t)? (n = t, t = void 0): t && "objeto" == typeof t && (i = "POST"), 0 <a.length && k.ajax ({url: e, tipo: i || "GET", dataType: "html", dados: t}). done (função (e) {o = argumentos, a.html (r? k ("<div > "). append (k.parseHTML (e)). encontrar (r): e)}). sempre (n && função (e, t) {a.each (function () {n.apply (this, o || [e.responseText, t, e])})}), este}, k.each (["ajaxStart", "ajaxStop", "ajaxComplete", "ajaxError", "ajaxSuccess", "ajaxSend"], função ( e, t) {k.fn [t] = função (e) {retornar this.on (t, e)}}), k.expr.pseudos.animated = função (t) {return k.grep (k. temporizadores, função (e) {retorno t === e.elem}). comprimento}, k.offset = {setOffset: função (e, t, n) {var r, eu, o, a, s, u, l = k.css (e, "posição"), c = k (e), f = {}; "estático" === l && (e.style.position = "relativo"), s = c.offset ( ), o = k.css (e, "topo"), u = k.css (e, "esquerda"), ("absoluto" === l || "fixo" === l) && -1 <(o + u) .indexOf ("auto")? (A = (r = c.position ()). Topo, i = r.left) :( a = parseFloat (o) || 0, i = parseFloat (u) || 0), m (t) && (t = t.call (e, n, k.extend ({}, s))), null! = t.top && (f.top = t.top-s.top + a), null! = t.left && (f.left = t.left-s.left + i), "using" em t? t.using.call (e, f): c.css (f)}}, k.fn.extend ({deslocamento: função (t) {if (arguments.length) return void 0 === t? isto: this.each (function (e) {k. offset.setOffset (this, t, e)}); var e, n, r = este [0]; retorno r? r.getClientRects (). length? (e = r.getBoundingClientRect (), n = r.ownerDocument .defaultView, {top: e.top + n.pageYOffset, à esquerda: e.left + n.pageXOffset}): {top: 0, à esquerda: 0}: void 0}, position: function () {if (isto [ 0]) {var e, t, n, r = isto [0], i = {topo: 0, esquerdo: 0}; se ("fixo" === k.css (r, "posição")) t = r.getBoundingClientRect (); sen {t = this.offset (), n = r.ownerDocument, e = r.offsetParent || n.documentElement; while (e& (e === n.body || e === n.documentElement) && "estático" === k.css (e, "posição")) e = e.parentNode; e && e! == r && 1 == = e.nodeType && ((i = k (e) .offset ()). topo + = k.css (e, "borderTopWidth",! 0), i.left + = k.css (e, "borderLeftWidth",! 0 )}} return {top: t.top-i.top-k.css (r, "marginTop",! 0), à esquerda: t.left-i.left-k.css (r, "marginLeft" ,! 0)}}}, offsetParent: function () {retornar this.map (function () {var e = this.offsetParent; while (e && "static" === k.css (e, "position")) e = e.offsetParent; return e || ie})}}), k.each ({scrollLeft: "pageXOffset", scrollTop: "pageYOffset"}, funcao (t, i) {var = "pageYOffset" === i k.fn [t] = função (e) {return _ (isso, função (e, t, n) {var r; if (x (e)? r = e: 9 === e.nodeType && (r = e.defaultView), void 0 === n) return r ?r [i]: e [t]; r ?r.scrollTo (o ?r.pageXOffset: n, o? n: r.pageYOffset): e [t] = n}, t, e, argumentos.length)}}), k.each (["top", "left"], função (e , n) {k.cssHooks [n] = ze (posicionar y.pixel, função (e, t) {se (t) retornar t = _e (e, n), $ e.teste (t)? k (e) .position () [n] + "px": t})}), k.each ({altura: "altura", largura: "largura"}, função (a, s) {k.each ({preenchimento: "interior" + a, conteúdo: s, "": "exterior" + a}, função (r, o) {k.fn [o] = função (e, t) {var n = argumentos.length && (r | | "booleano"! = typeof e), i = r || (! 0 === e ||! 0 === t? "margin": "border"); return _ (isso, função (e, t , n) {var r; return x (e)? 0 === o.indexOf ("outer")? e ["interior" + a]: e.document.documentElement ["client" + a]: 9 = == e.nodeType? (r = e.documentElement, Math.max (e.body ["rolar" + a], r ["rolar" + a], e.body ["deslocamento" + a], r [ "offset"+ a], r ["cliente" + a])): void 0 === n? k.css (e, t, i): k.style (e, t, n, i)}, s, n ? e: void 0, n)}})}), k.each ("borrar foco foco em foco redimensionar rolar clique dblclick mousedown mouseup mousemove mouseover mouseout mouseenocarroou alterar mudar selecionar submissão keydown keyf keyup contextmenu" .split (""), função (e, n) {k.fn [n] = função (e, t) {return 0 <argumentos.length? this.on (n, nulo, e, t): this.trigger (n)}}), k.fn.extend ({hover: function (e, t) {retornar this.mouseenter (e) .mouseleave (t || e)}}), k.fn.extend ({bind: function (e, t, n) {retornar this.on (e, nulo, t, n)}, desvincular: function (e, t) {retornar this.off (e, null, t)}, delegar: function (e, t, n, r) {return this.on (t, e, n, r)}, undelegate: function (e, t, n) {return 1 === argumentos.length? this.off (e, "**"): this.off (t, e || "**", n)}}), k.proxy = função (e, t) {var n, r, i; if ("cadeia" == tipo de t && (n = e [t]t = e, e = n), m (e)) retorno r = s.call (argumentos, 2), (i = function () {return e.apply (t || isso, r.concat (s.call) (argumentos))))). guid = e.guid = e.guid || k.guid ++, i}, k.holdReady = função (e) {e? k.readyWait ++: k.ready (! 0)}, k.isArray = Array.isArray, k.parseJSON = JSON.parse, k.nodeName = A, k.isFunction = m, k.isWindow = x, k.camelCase = V, k.type = w, k.now = Date.now, k.isNumeric = função (e) {var t = k.type (e); return ("número" === t || "string" === t) &&! IsNaN (e-parseFloat ( e)}, "function" == typeof define && define.amd && define ("jquery", [], function () {return k}); var Qt = C.jQuery, Jt = C. $; return k.noConflict = function (e) {return C. $ === k && (C. $ = Jt), e && C.jQuery === k && (C.jQuery = Qt), k}, e || (C.jQuery = C. $ = k), k});guid || k.guid ++, i}, k.holdReady = função (e) {e? k.readyWait ++: k.ready (! 0)}, k.isArray = Array.isArray, k.parseJSON = JSON.parse, k.nodeName = A, k.isFunction = m, k.isWindow = x, k.camelCase = V, k.type = w, k.now = Date.now, k.isNumeric = funo (e) {var t = k.type (e); return ("número" === t || "string" === t) &&! isNaN (e-parseFloat (e))}, "função" == tipoof define && define.amd && define (" jquery ", [], function () {return k}); var Qt = C.jQuery, Jt = C. $; return k.noConflict = função (e) {retorno C. $ === k && (C. $ = Jt), e && C.jQuery === k && (C.jQuery = Qt), k}, e || (C.jQuery = C. $ = K), k});guid || k.guid ++, i}, k.holdReady = função (e) {e? k.readyWait ++: k.ready (! 0)}, k.isArray = Array.isArray, k.parseJSON = JSON.parse, k.nodeName = A, k.isFunction = m, k.isWindow = x, k.camelCase = V, k.type = w, k.now = Date.now, k.isNumeric = funo (e) {var t = k.type (e); return ("número" === t || "string" === t) &&! isNaN (e-parseFloat (e))}, "função" == tipoof define && define.amd && define (" jquery ", [], function () {return k}); var Qt = C.jQuery, Jt = C. $; return k.noConflict = função (e) {retorno C. $ === k && (C. $ = Jt), e && C.jQuery === k && (C.jQuery = Qt), k}, e || (C.jQuery = C. $ = K), k});=== t || "string" === t) &&! isNaN (e-parseFloat (e))}, "função" == typeof define && define.amd && define ("jquery", [], função () {retorno k }); var Qt = C.jQuery, Jt = C. $; retorno k.noConflict = função (e) {retorno C. $ === k && (C. $ = Jt), e && C.jQuery === k && ( C.jQuery = Qt), k}, e || (C.jQuery = C. $ = K), k});=== t || "string" === t) &&! isNaN (e-parseFloat (e))}, "função" == typeof define && define.amd && define ("jquery", [], função () {retorno k }); var Qt = C.jQuery, Jt = C. $; retorno k.noConflict = função (e) {retorno C. $ === k && (C. $ = Jt), e && C.jQuery === k && ( C.jQuery = Qt), k}, e || (C.jQuery = C. $ = K), k});